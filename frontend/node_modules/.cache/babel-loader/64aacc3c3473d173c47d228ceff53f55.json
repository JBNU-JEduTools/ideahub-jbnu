{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kirin\\\\Desktop\\\\cmanager\\\\frontend\\\\src\\\\containers\\\\contentWrite\\\\ContentWriteActionButtonsContainer.js\";\nimport React, { useEffect } from 'react';\nimport ContentWriteActionButtons from '../../components/contentWrite/ContentWriteActionButton';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { contentWritePost } from '../../modules/contentWrite';\n\nconst ContentWriteActionButtonsContainer = ({\n  history\n}) => {\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(({\n    contentWrite\n  }) => ({\n    title: contentWrite.title,\n    body: contentWrite.body,\n    taggedContest: contentWrite.taggedContest,\n    videoURL: contentWrite.videoURL,\n    team: contentWrite.team,\n    status: contentWrite.status,\n    post: contentWrite.post,\n    postError: contentWrite.postError\n  })),\n        title = _useSelector.title,\n        body = _useSelector.body,\n        taggedContest = _useSelector.taggedContest,\n        videoURL = _useSelector.videoURL,\n        team = _useSelector.team,\n        status = _useSelector.status,\n        content = _useSelector.content,\n        contentError = _useSelector.contentError;\n\n  const onPublish = () => {\n    dispatch(contentWritePost({\n      title,\n      body,\n      taggedContest,\n      videoURL,\n      team,\n      status\n    }));\n  };\n\n  const onCancel = () => {\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (content) {\n      const _id = content._id,\n            user = content.user;\n      console.log(user);\n      history.push(\"/content/@\".concat(user.username, \"/\").concat(_id));\n    }\n\n    if (contentError) {\n      console.log(contentError);\n    }\n  }, [history, content, contentError]);\n  return React.createElement(ContentWriteActionButtons, {\n    onPublish: onPublish,\n    onCancel: onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(ContentWriteActionButtonsContainer);","map":{"version":3,"sources":["C:\\Users\\kirin\\Desktop\\cmanager\\frontend\\src\\containers\\contentWrite\\ContentWriteActionButtonsContainer.js"],"names":["React","useEffect","ContentWriteActionButtons","useSelector","useDispatch","withRouter","contentWritePost","ContentWriteActionButtonsContainer","history","dispatch","contentWrite","title","body","taggedContest","videoURL","team","status","post","postError","content","contentError","onPublish","onCancel","goBack","_id","user","console","log","push","username"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,yBAAP,MAAsC,wDAAtC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,gBAAT,QAAiC,4BAAjC;;AAEA,MAAMC,kCAAkC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC1D,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;;AAD0D,uBAWtDD,WAAW,CAAC,CAAC;AAAEO,IAAAA;AAAF,GAAD,MAAuB;AACrCC,IAAAA,KAAK,EAAED,YAAY,CAACC,KADiB;AAErCC,IAAAA,IAAI,EAAEF,YAAY,CAACE,IAFkB;AAGrCC,IAAAA,aAAa,EAAEH,YAAY,CAACG,aAHS;AAIrCC,IAAAA,QAAQ,EAAEJ,YAAY,CAACI,QAJc;AAKrCC,IAAAA,IAAI,EAAEL,YAAY,CAACK,IALkB;AAMrCC,IAAAA,MAAM,EAAEN,YAAY,CAACM,MANgB;AAOrCC,IAAAA,IAAI,EAAEP,YAAY,CAACO,IAPkB;AAQrCC,IAAAA,SAAS,EAAER,YAAY,CAACQ;AARa,GAAvB,CAAD,CAX2C;AAAA,QAGxDP,KAHwD,gBAGxDA,KAHwD;AAAA,QAIxDC,IAJwD,gBAIxDA,IAJwD;AAAA,QAKxDC,aALwD,gBAKxDA,aALwD;AAAA,QAMxDC,QANwD,gBAMxDA,QANwD;AAAA,QAOxDC,IAPwD,gBAOxDA,IAPwD;AAAA,QAQxDC,MARwD,gBAQxDA,MARwD;AAAA,QASxDG,OATwD,gBASxDA,OATwD;AAAA,QAUxDC,YAVwD,gBAUxDA,YAVwD;;AAsB1D,QAAMC,SAAS,GAAG,MAAM;AACtBZ,IAAAA,QAAQ,CACNH,gBAAgB,CAAC;AACfK,MAAAA,KADe;AAEfC,MAAAA,IAFe;AAGfC,MAAAA,aAHe;AAIfC,MAAAA,QAJe;AAKfC,MAAAA,IALe;AAMfC,MAAAA;AANe,KAAD,CADV,CAAR;AAUD,GAXD;;AAaA,QAAMM,QAAQ,GAAG,MAAM;AACrBd,IAAAA,OAAO,CAACe,MAAR;AACD,GAFD;;AAIAtB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkB,OAAJ,EAAa;AAAA,YACHK,GADG,GACWL,OADX,CACHK,GADG;AAAA,YACEC,IADF,GACWN,OADX,CACEM,IADF;AAEXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAjB,MAAAA,OAAO,CAACoB,IAAR,qBAA0BH,IAAI,CAACI,QAA/B,cAA2CL,GAA3C;AACD;;AACD,QAAIJ,YAAJ,EAAkB;AAChBM,MAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AACD;AACF,GATQ,EASN,CAACZ,OAAD,EAAUW,OAAV,EAAmBC,YAAnB,CATM,CAAT;AAUA,SACE,oBAAC,yBAAD;AAA2B,IAAA,SAAS,EAAEC,SAAtC;AAAiD,IAAA,QAAQ,EAAEC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD,CApDD;;AAsDA,eAAejB,UAAU,CAACE,kCAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\r\nimport ContentWriteActionButtons from '../../components/contentWrite/ContentWriteActionButton';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { contentWritePost } from '../../modules/contentWrite';\r\n\r\nconst ContentWriteActionButtonsContainer = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    title,\r\n    body,\r\n    taggedContest,\r\n    videoURL,\r\n    team,\r\n    status,\r\n    content,\r\n    contentError,\r\n  } = useSelector(({ contentWrite }) => ({\r\n    title: contentWrite.title,\r\n    body: contentWrite.body,\r\n    taggedContest: contentWrite.taggedContest,\r\n    videoURL: contentWrite.videoURL,\r\n    team: contentWrite.team,\r\n    status: contentWrite.status,\r\n    post: contentWrite.post,\r\n    postError: contentWrite.postError,\r\n  }));\r\n\r\n  const onPublish = () => {\r\n    dispatch(\r\n      contentWritePost({\r\n        title,\r\n        body,\r\n        taggedContest,\r\n        videoURL,\r\n        team,\r\n        status,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (content) {\r\n      const { _id, user } = content;\r\n      console.log(user);\r\n      history.push(`/content/@${user.username}/${_id}`);\r\n    }\r\n    if (contentError) {\r\n      console.log(contentError);\r\n    }\r\n  }, [history, content, contentError]);\r\n  return (\r\n    <ContentWriteActionButtons onPublish={onPublish} onCancel={onCancel} />\r\n  );\r\n};\r\n\r\nexport default withRouter(ContentWriteActionButtonsContainer);\r\n"]},"metadata":{},"sourceType":"module"}