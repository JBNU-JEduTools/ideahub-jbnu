{"ast":null,"code":"var _jsxFileName = \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\src\\\\containers\\\\post\\\\NoPrizedAlerterContainer.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport NoPrizedAlerter from '../../components/post/NoPrizedAlerter';\nimport { getContentsList } from '../../modules/post'; //react-router-dom을 사용해 라우트로 설정한 컴포넌트는 3가지의 props를 전달받음.\n//match: 어떤 라우트에 매칭되었는지에 대한 정보.\n//history: push, replace를 통해 다른 경로로 이동하거나 앞 뒤 페이지로 전환 가능.\n\nconst NoPrizedAlerterContainer = ({\n  match,\n  history\n}) => {\n  const postId = match.params.postId;\n  const dispatch = useDispatch();\n  /*\r\n    post = {\r\n      post: {\r\n        ...\r\n      },\r\n      error: {\r\n        ...\r\n      },\r\n      contentsList: [\r\n        {\r\n          //content 객체\r\n        }\r\n      ]\r\n    }\r\n  */\n\n  const _useSelector = useSelector(({\n    post,\n    contentsList\n  }) => ({\n    post: post.post,\n    contentsList: post.contentsList\n  })),\n        post = _useSelector.post,\n        contentsList = _useSelector.contentsList;\n\n  const title = post.title;\n  useEffect(() => {\n    dispatch(getContentsList(title));\n  }, [dispatch, title]); //수상 작품 등록 및 저장.\n\n  const onPrizeSave = () => {//☆★☆★☆★☆★☆★수정 필요!!!☆★☆★☆★☆★☆★\n  };\n\n  return React.createElement(NoPrizedAlerter, {\n    contents: contentsList,\n    onPrizeSave: onPrizeSave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(NoPrizedAlerterContainer);","map":{"version":3,"sources":["C:/repusjh_Git/cmanager-public/frontend/src/containers/post/NoPrizedAlerterContainer.js"],"names":["React","useEffect","useDispatch","useSelector","withRouter","NoPrizedAlerter","getContentsList","NoPrizedAlerterContainer","match","history","postId","params","dispatch","post","contentsList","title","onPrizeSave"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,SAASC,eAAT,QAAgC,oBAAhC,C,CAEA;AACA;AACA;;AACA,MAAMC,wBAAwB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AAAA,QAC/CC,MAD+C,GACpCF,KAAK,CAACG,MAD8B,CAC/CD,MAD+C;AAEvD,QAAME,QAAQ,GAAGV,WAAW,EAA5B;AACA;;;;;;;;;;;;;;;;AAHuD,uBAkBxBC,WAAW,CAAC,CAAC;AAAEU,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,MAA6B;AACtED,IAAAA,IAAI,EAAEA,IAAI,CAACA,IAD2D;AAEtEC,IAAAA,YAAY,EAAED,IAAI,CAACC;AAFmD,GAA7B,CAAD,CAlBa;AAAA,QAkB/CD,IAlB+C,gBAkB/CA,IAlB+C;AAAA,QAkBzCC,YAlByC,gBAkBzCA,YAlByC;;AAAA,QAuB/CC,KAvB+C,GAuBrCF,IAvBqC,CAuB/CE,KAvB+C;AAyBvDd,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACN,eAAe,CAACS,KAAD,CAAhB,CAAR;AACD,GAFQ,EAEN,CAACH,QAAD,EAAWG,KAAX,CAFM,CAAT,CAzBuD,CA6BvD;;AACA,QAAMC,WAAW,GAAG,MAAM,CACxB;AACD,GAFD;;AAIA,SAAO,oBAAC,eAAD;AAAiB,IAAA,QAAQ,EAAEF,YAA3B;AAAyC,IAAA,WAAW,EAAEE,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAnCD;;AAqCA,eAAeZ,UAAU,CAACG,wBAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport NoPrizedAlerter from '../../components/post/NoPrizedAlerter';\r\nimport { getContentsList } from '../../modules/post';\r\n\r\n//react-router-dom을 사용해 라우트로 설정한 컴포넌트는 3가지의 props를 전달받음.\r\n//match: 어떤 라우트에 매칭되었는지에 대한 정보.\r\n//history: push, replace를 통해 다른 경로로 이동하거나 앞 뒤 페이지로 전환 가능.\r\nconst NoPrizedAlerterContainer = ({ match, history }) => {\r\n  const { postId } = match.params;\r\n  const dispatch = useDispatch();\r\n  /*\r\n    post = {\r\n      post: {\r\n        ...\r\n      },\r\n      error: {\r\n        ...\r\n      },\r\n      contentsList: [\r\n        {\r\n          //content 객체\r\n        }\r\n      ]\r\n    }\r\n  */\r\n  const { post, contentsList } = useSelector(({ post, contentsList }) => ({\r\n    post: post.post,\r\n    contentsList: post.contentsList,\r\n  }));\r\n\r\n  const { title } = post;\r\n\r\n  useEffect(() => {\r\n    dispatch(getContentsList(title));\r\n  }, [dispatch, title]);\r\n\r\n  //수상 작품 등록 및 저장.\r\n  const onPrizeSave = () => {\r\n    //☆★☆★☆★☆★☆★수정 필요!!!☆★☆★☆★☆★☆★\r\n  };\r\n\r\n  return <NoPrizedAlerter contents={contentsList} onPrizeSave={onPrizeSave} />;\r\n};\r\n\r\nexport default withRouter(NoPrizedAlerterContainer);\r\n"]},"metadata":{},"sourceType":"module"}