{"ast":null,"code":"var _jsxFileName = \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\src\\\\containers\\\\contents\\\\ContentListContainer.js\";\nimport React, { useEffect } from 'react';\nimport qs from 'qs';\nimport { withRouter } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContentList from '../../components/contents/ContentList';\nimport { listContents } from '../../modules/contents';\n\nconst ContentListContainer = ({\n  location\n}) => {\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(({\n    contents,\n    loading,\n    user\n  }) => ({\n    contents: contents.contents,\n    error: contents.error,\n    loading: loading['contents/LIST_CONTENTS'],\n    user: user.user\n  })),\n        contents = _useSelector.contents,\n        error = _useSelector.error,\n        loading = _useSelector.loading,\n        user = _useSelector.user;\n\n  useEffect(() => {\n    const _qs$parse = qs.parse(location.search, {\n      ignoreQueryPrefix: true\n    }),\n          tag = _qs$parse.tag,\n          username = _qs$parse.username,\n          page = _qs$parse.page;\n\n    dispatch(listContents({\n      tag,\n      username,\n      page\n    }));\n  }, [dispatch, location.search]);\n  return React.createElement(ContentList, {\n    loading: loading,\n    error: error,\n    contents: contents,\n    showWriteButton: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(ContentListContainer);","map":{"version":3,"sources":["C:\\repusjh_Git\\cmanager-public\\frontend\\src\\containers\\contents\\ContentListContainer.js"],"names":["React","useEffect","qs","withRouter","useDispatch","useSelector","ContentList","listContents","ContentListContainer","location","dispatch","contents","loading","user","error","parse","search","ignoreQueryPrefix","tag","username","page"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,SAASC,YAAT,QAA6B,wBAA7B;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC7C,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AAD6C,uBAEFC,WAAW,CACpD,CAAC;AAAEM,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA;AAArB,GAAD,MAAkC;AAChCF,IAAAA,QAAQ,EAAEA,QAAQ,CAACA,QADa;AAEhCG,IAAAA,KAAK,EAAEH,QAAQ,CAACG,KAFgB;AAGhCF,IAAAA,OAAO,EAAEA,OAAO,CAAC,wBAAD,CAHgB;AAIhCC,IAAAA,IAAI,EAAEA,IAAI,CAACA;AAJqB,GAAlC,CADoD,CAFT;AAAA,QAErCF,QAFqC,gBAErCA,QAFqC;AAAA,QAE3BG,KAF2B,gBAE3BA,KAF2B;AAAA,QAEpBF,OAFoB,gBAEpBA,OAFoB;AAAA,QAEXC,IAFW,gBAEXA,IAFW;;AAU7CZ,EAAAA,SAAS,CAAC,MAAM;AAAA,sBACkBC,EAAE,CAACa,KAAH,CAASN,QAAQ,CAACO,MAAlB,EAA0B;AACxDC,MAAAA,iBAAiB,EAAE;AADqC,KAA1B,CADlB;AAAA,UACNC,GADM,aACNA,GADM;AAAA,UACDC,QADC,aACDA,QADC;AAAA,UACSC,IADT,aACSA,IADT;;AAIdV,IAAAA,QAAQ,CAACH,YAAY,CAAC;AAAEW,MAAAA,GAAF;AAAOC,MAAAA,QAAP;AAAiBC,MAAAA;AAAjB,KAAD,CAAb,CAAR;AACD,GALQ,EAKN,CAACV,QAAD,EAAWD,QAAQ,CAACO,MAApB,CALM,CAAT;AAOA,SACE,oBAAC,WAAD;AACE,IAAA,OAAO,EAAEJ,OADX;AAEE,IAAA,KAAK,EAAEE,KAFT;AAGE,IAAA,QAAQ,EAAEH,QAHZ;AAIE,IAAA,eAAe,EAAEE,IAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CAzBD;;AA2BA,eAAeV,UAAU,CAACK,oBAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\r\nimport qs from 'qs';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ContentList from '../../components/contents/ContentList';\r\nimport { listContents } from '../../modules/contents';\r\n\r\nconst ContentListContainer = ({ location }) => {\r\n  const dispatch = useDispatch();\r\n  const { contents, error, loading, user } = useSelector(\r\n    ({ contents, loading, user }) => ({\r\n      contents: contents.contents,\r\n      error: contents.error,\r\n      loading: loading['contents/LIST_CONTENTS'],\r\n      user: user.user,\r\n    }),\r\n  );\r\n  useEffect(() => {\r\n    const { tag, username, page } = qs.parse(location.search, {\r\n      ignoreQueryPrefix: true,\r\n    });\r\n    dispatch(listContents({ tag, username, page }));\r\n  }, [dispatch, location.search]);\r\n\r\n  return (\r\n    <ContentList\r\n      loading={loading}\r\n      error={error}\r\n      contents={contents}\r\n      showWriteButton={user}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(ContentListContainer);\r\n"]},"metadata":{},"sourceType":"module"}