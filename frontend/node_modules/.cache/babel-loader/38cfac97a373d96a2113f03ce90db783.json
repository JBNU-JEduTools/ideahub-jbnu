{"ast":null,"code":"import _slicedToArray from \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\src\\\\components\\\\main\\\\MainSlideShow.js\";\n\nfunction _templateObject6() {\n  const data = _taggedTemplateLiteral([\"\\n  min-width: 100%;\\n  height: 100%;\\n  border: 1px solid blue;\\n\"]);\n\n  _templateObject6 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n  border: none;\\n  outline: none;\\n  position: absolute;\\n  top: 50%;\\n  transform: translateY(-50%);\\n  width: 10%;\\n  background: none;\\n  right: 0;\\n  transition: 0.5s;\\n  font-size: 3rem;\\n  font-weight: 1000;\\n  &:hover {\\n    background: rgba(0, 0, 0, 0.356);\\n    cursor: pointer;\\n    color: white;\\n  }\\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  border: none;\\n  outline: none;\\n  position: absolute;\\n  top: 50%;\\n  transform: translateY(-50%);\\n  width: 10%;\\n  background: none;\\n  left: 0;\\n  transition: 0.5s;\\n  font-size: 3rem;\\n  font-weight: 1000;\\n  &:hover {\\n    background: rgba(0, 0, 0, 0.356);\\n    cursor: pointer;\\n    color: white;\\n  }\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 100+'%';\\n  height: auto;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  height: 100%;\\n  min-width: 100%;\\n  transition: 0.5s;\\n  overflow: hidden;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  width: 100%;\\n  height: 30vh;\\n  margin: 0;\\n  padding: 0;\\n  display: flex;\\n  align-items: center;\\n  box-sizing: border-box;\\n  border: 3px solid red;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport mainImg1 from '../../images/main.png';\nimport mainImg2 from '../../images/main3.png';\nconst SliderHolder = styled.div(_templateObject());\nconst SlideItem = styled.div(_templateObject2());\nconst ImgHolder = styled.img(_templateObject3());\nconst SlideNavButtonLeft = styled.button(_templateObject4());\nconst SlideNavButtonRight = styled.button(_templateObject5());\nconst TestDiv = styled.div(_templateObject6());\n\nconst MainSlideShow = () => {\n  let sliderArray = [React.createElement(TestDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"1\"), React.createElement(ImgHolder, {\n    src: mainImg2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })];\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        x = _useState2[0],\n        setX = _useState2[1];\n\n  const goLeft = () => {\n    x === 0 ? setX(-100 * (sliderArray.length - 1)) : setX(x + 100);\n  };\n\n  const goRight = () => {\n    x === -100 * (sliderArray.length - 1) ? setX(0) : setX(x - 100);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(SliderHolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, sliderArray.map((item, index) => {\n    return React.createElement(SlideItem, {\n      key: index,\n      style: {\n        transform: \"translateX(\".concat(x, \"%)\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, item);\n  }), React.createElement(SlideNavButtonLeft, {\n    className: \"leftButton\",\n    onClick: goLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"<\"), React.createElement(SlideNavButtonRight, {\n    className: \"rightButton\",\n    onClick: goRight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \">\")));\n};\n\nexport default MainSlideShow;","map":{"version":3,"sources":["C:\\repusjh_Git\\cmanager-public\\frontend\\src\\components\\main\\MainSlideShow.js"],"names":["React","useState","useEffect","styled","mainImg1","mainImg2","SliderHolder","div","SlideItem","ImgHolder","img","SlideNavButtonLeft","button","SlideNavButtonRight","TestDiv","MainSlideShow","sliderArray","x","setX","goLeft","length","goRight","map","item","index","transform"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,MAAMC,YAAY,GAAGH,MAAM,CAACI,GAAV,mBAAlB;AAYA,MAAMC,SAAS,GAAGL,MAAM,CAACI,GAAV,oBAAf;AAQA,MAAME,SAAS,GAAGN,MAAM,CAACO,GAAV,oBAAf;AAKA,MAAMC,kBAAkB,GAAGR,MAAM,CAACS,MAAV,oBAAxB;AAmBA,MAAMC,mBAAmB,GAAGV,MAAM,CAACS,MAAV,oBAAzB;AAmBA,MAAME,OAAO,GAAGX,MAAM,CAACI,GAAV,oBAAb;;AAMA,MAAMQ,aAAa,GAAG,MAAM;AAC1B,MAAIC,WAAW,GAAG,CAAC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAD,EAAuB,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEX,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,CAAlB;;AAD0B,oBAERJ,QAAQ,CAAC,CAAD,CAFA;AAAA;AAAA,QAEnBgB,CAFmB;AAAA,QAEhBC,IAFgB;;AAG1B,QAAMC,MAAM,GAAG,MAAM;AACnBF,IAAAA,CAAC,KAAK,CAAN,GAAUC,IAAI,CAAC,CAAC,GAAD,IAAQF,WAAW,CAACI,MAAZ,GAAqB,CAA7B,CAAD,CAAd,GAAkDF,IAAI,CAACD,CAAC,GAAG,GAAL,CAAtD;AACD,GAFD;;AAGA,QAAMI,OAAO,GAAG,MAAM;AACpBJ,IAAAA,CAAC,KAAK,CAAC,GAAD,IAAQD,WAAW,CAACI,MAAZ,GAAqB,CAA7B,CAAN,GAAwCF,IAAI,CAAC,CAAD,CAA5C,GAAkDA,IAAI,CAACD,CAAC,GAAG,GAAL,CAAtD;AACD,GAFD;;AAIA,SACE,0CACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,WAAW,CAACM,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChC,WACE,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,KAAhB;AAAuB,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,uBAAgBR,CAAhB;AAAX,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGM,IADH,CADF;AAKD,GANA,CADH,EAQE,oBAAC,kBAAD;AAAoB,IAAA,SAAS,EAAC,YAA9B;AAA2C,IAAA,OAAO,EAAEJ,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SARF,EAWE,oBAAC,mBAAD;AAAqB,IAAA,SAAS,EAAC,aAA/B;AAA6C,IAAA,OAAO,EAAEE,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAXF,CADF,CADF;AAmBD,CA7BD;;AA+BA,eAAeN,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport mainImg1 from '../../images/main.png';\r\nimport mainImg2 from '../../images/main3.png';\r\n\r\nconst SliderHolder = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 30vh;\r\n  margin: 0;\r\n  padding: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  border: 3px solid red;\r\n`;\r\n\r\nconst SlideItem = styled.div`\r\n  position: relative;\r\n  height: 100%;\r\n  min-width: 100%;\r\n  transition: 0.5s;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ImgHolder = styled.img`\r\n  width: 100+'%';\r\n  height: auto;\r\n`;\r\n\r\nconst SlideNavButtonLeft = styled.button`\r\n  border: none;\r\n  outline: none;\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  width: 10%;\r\n  background: none;\r\n  left: 0;\r\n  transition: 0.5s;\r\n  font-size: 3rem;\r\n  font-weight: 1000;\r\n  &:hover {\r\n    background: rgba(0, 0, 0, 0.356);\r\n    cursor: pointer;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst SlideNavButtonRight = styled.button`\r\n  border: none;\r\n  outline: none;\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  width: 10%;\r\n  background: none;\r\n  right: 0;\r\n  transition: 0.5s;\r\n  font-size: 3rem;\r\n  font-weight: 1000;\r\n  &:hover {\r\n    background: rgba(0, 0, 0, 0.356);\r\n    cursor: pointer;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst TestDiv = styled.div`\r\n  min-width: 100%;\r\n  height: 100%;\r\n  border: 1px solid blue;\r\n`;\r\n\r\nconst MainSlideShow = () => {\r\n  let sliderArray = [<TestDiv>1</TestDiv>, <ImgHolder src={mainImg2} />];\r\n  const [x, setX] = useState(0);\r\n  const goLeft = () => {\r\n    x === 0 ? setX(-100 * (sliderArray.length - 1)) : setX(x + 100);\r\n  };\r\n  const goRight = () => {\r\n    x === -100 * (sliderArray.length - 1) ? setX(0) : setX(x - 100);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SliderHolder>\r\n        {sliderArray.map((item, index) => {\r\n          return (\r\n            <SlideItem key={index} style={{ transform: `translateX(${x}%)` }}>\r\n              {item}\r\n            </SlideItem>\r\n          );\r\n        })}\r\n        <SlideNavButtonLeft className=\"leftButton\" onClick={goLeft}>\r\n          &lt;\r\n        </SlideNavButtonLeft>\r\n        <SlideNavButtonRight className=\"rightButton\" onClick={goRight}>\r\n          &gt;\r\n        </SlideNavButtonRight>\r\n      </SliderHolder>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainSlideShow;\r\n"]},"metadata":{},"sourceType":"module"}