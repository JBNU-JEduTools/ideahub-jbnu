{"ast":null,"code":"var _jsxFileName = \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\src\\\\containers\\\\post\\\\NoPrizedAlerterContainer.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport NoPrizedAlerter from '../../components/post/NoPrizedAlerter';\nimport { listContentItem } from '../../modules/post'; //react-router-dom을 사용해 라우트로 설정한 컴포넌트는 3가지의 props를 전달받음.\n//match: 어떤 라우트에 매칭되었는지에 대한 정보.\n//history: push, replace를 통해 다른 경로로 이동하거나 앞 뒤 페이지로 전환 가능.\n\nconst NoPrizedAlerterContainer = ({\n  match,\n  history,\n  location\n}) => {\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(({\n    post,\n    contentsList,\n    listLoading\n  }) => ({\n    post: post.post,\n    listError: post.listError,\n    listLoading: loading['post/LIST_CONTENT_ITEM'],\n    contentsList: post.contentsList\n  })),\n        post = _useSelector.post,\n        contentsList = _useSelector.contentsList,\n        listError = _useSelector.listError,\n        listLoading = _useSelector.listLoading;\n\n  const title = post.title;\n  useEffect(() => {\n    dispatch(getContentsList({\n      title\n    }));\n  }, [dispatch]); //수상 작품 등록 및 저장.\n\n  const onPrizeSave = () => {//☆★☆★☆★☆★☆★수정 필요!!!☆★☆★☆★☆★☆★\n  };\n\n  return React.createElement(NoPrizedAlerter, {\n    contents: contentsList,\n    onPrizeSave: onPrizeSave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(NoPrizedAlerterContainer);","map":{"version":3,"sources":["C:/repusjh_Git/cmanager-public/frontend/src/containers/post/NoPrizedAlerterContainer.js"],"names":["React","useEffect","useDispatch","useSelector","withRouter","NoPrizedAlerter","listContentItem","NoPrizedAlerterContainer","match","history","location","dispatch","post","contentsList","listLoading","listError","loading","title","getContentsList","onPrizeSave"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,SAASC,eAAT,QAAgC,oBAAhC,C,CAEA;AACA;AACA;;AACA,MAAMC,wBAAwB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA;AAAlB,CAAD,KAAkC;AACjE,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AADiE,uBAGVC,WAAW,CAChE,CAAC;AAAES,IAAAA,IAAF;AAAQC,IAAAA,YAAR;AAAsBC,IAAAA;AAAtB,GAAD,MAA0C;AACxCF,IAAAA,IAAI,EAAEA,IAAI,CAACA,IAD6B;AAExCG,IAAAA,SAAS,EAAEH,IAAI,CAACG,SAFwB;AAGxCD,IAAAA,WAAW,EAAEE,OAAO,CAAC,wBAAD,CAHoB;AAIxCH,IAAAA,YAAY,EAAED,IAAI,CAACC;AAJqB,GAA1C,CADgE,CAHD;AAAA,QAGzDD,IAHyD,gBAGzDA,IAHyD;AAAA,QAGnDC,YAHmD,gBAGnDA,YAHmD;AAAA,QAGrCE,SAHqC,gBAGrCA,SAHqC;AAAA,QAG1BD,WAH0B,gBAG1BA,WAH0B;;AAAA,QAYzDG,KAZyD,GAY/CL,IAZ+C,CAYzDK,KAZyD;AAcjEhB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACO,eAAe,CAAC;AAAED,MAAAA;AAAF,KAAD,CAAhB,CAAR;AACD,GAFQ,EAEN,CAACN,QAAD,CAFM,CAAT,CAdiE,CAkBjE;;AACA,QAAMQ,WAAW,GAAG,MAAM,CACxB;AACD,GAFD;;AAIA,SAAO,oBAAC,eAAD;AAAiB,IAAA,QAAQ,EAAEN,YAA3B;AAAyC,IAAA,WAAW,EAAEM,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAxBD;;AA0BA,eAAef,UAAU,CAACG,wBAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport NoPrizedAlerter from '../../components/post/NoPrizedAlerter';\r\nimport { listContentItem } from '../../modules/post';\r\n\r\n//react-router-dom을 사용해 라우트로 설정한 컴포넌트는 3가지의 props를 전달받음.\r\n//match: 어떤 라우트에 매칭되었는지에 대한 정보.\r\n//history: push, replace를 통해 다른 경로로 이동하거나 앞 뒤 페이지로 전환 가능.\r\nconst NoPrizedAlerterContainer = ({ match, history, location }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { post, contentsList, listError, listLoading } = useSelector(\r\n    ({ post, contentsList, listLoading }) => ({\r\n      post: post.post,\r\n      listError: post.listError,\r\n      listLoading: loading['post/LIST_CONTENT_ITEM'],\r\n      contentsList: post.contentsList,\r\n    }),\r\n  );\r\n\r\n  const { title } = post;\r\n\r\n  useEffect(() => {\r\n    dispatch(getContentsList({ title }));\r\n  }, [dispatch]);\r\n\r\n  //수상 작품 등록 및 저장.\r\n  const onPrizeSave = () => {\r\n    //☆★☆★☆★☆★☆★수정 필요!!!☆★☆★☆★☆★☆★\r\n  };\r\n\r\n  return <NoPrizedAlerter contents={contentsList} onPrizeSave={onPrizeSave} />;\r\n};\r\n\r\nexport default withRouter(NoPrizedAlerterContainer);\r\n"]},"metadata":{},"sourceType":"module"}