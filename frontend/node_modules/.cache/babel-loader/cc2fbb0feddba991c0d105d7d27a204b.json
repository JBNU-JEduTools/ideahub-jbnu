{"ast":null,"code":"var _jsxFileName = \"/Users/qwerasdf_ho/Desktop/ideaHub/frontend/src/containers/posts/PostListContainer.js\";\nimport React, { useEffect } from 'react';\nimport qs from 'qs';\nimport { withRouter } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostList from '../../components/posts/PostList';\nimport { listPosts, listRecommendedPosts } from '../../modules/posts';\n\nconst PostListContainer = ({\n  location\n}) => {\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(({\n    posts,\n    loading,\n    user\n  }) => ({\n    posts: posts.posts,\n    recommendedPosts: posts.recommendedPosts,\n    error: posts.error,\n    loading: loading[('posts/LIST_POSTS', 'posts/LIST_RECOMMENDED_POSTS')],\n    user: user.user\n  })),\n        posts = _useSelector.posts,\n        recommendedPosts = _useSelector.recommendedPosts,\n        error = _useSelector.error,\n        loading = _useSelector.loading,\n        user = _useSelector.user;\n\n  useEffect(() => {\n    const _qs$parse = qs.parse(location.search, {\n      ignoreQueryPrefix: true\n    }),\n          tag = _qs$parse.tag,\n          username = _qs$parse.username,\n          page = _qs$parse.page;\n\n    dispatch(listPosts({\n      tag,\n      username,\n      page\n    }));\n    dispatch(listRecommendedPosts());\n  }, [dispatch, location.search]);\n  return React.createElement(PostList, {\n    loading: loading,\n    error: error,\n    posts: posts,\n    recommendedPosts: recommendedPosts,\n    showWriteButton: user && (user.role === 'admin' || user.role === 'writer'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(PostListContainer);","map":{"version":3,"sources":["/Users/qwerasdf_ho/Desktop/ideaHub/frontend/src/containers/posts/PostListContainer.js"],"names":["React","useEffect","qs","withRouter","useDispatch","useSelector","PostList","listPosts","listRecommendedPosts","PostListContainer","location","dispatch","posts","loading","user","recommendedPosts","error","parse","search","ignoreQueryPrefix","tag","username","page","role"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,SAASC,SAAT,EAAoBC,oBAApB,QAAgD,qBAAhD;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC1C,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AAD0C,uBAEgBC,WAAW,CACnE,CAAC;AAAEO,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,GAAD,MAA+B;AAC7BF,IAAAA,KAAK,EAAEA,KAAK,CAACA,KADgB;AAE7BG,IAAAA,gBAAgB,EAAEH,KAAK,CAACG,gBAFK;AAG7BC,IAAAA,KAAK,EAAEJ,KAAK,CAACI,KAHgB;AAI7BH,IAAAA,OAAO,EAAEA,OAAO,EAAE,oBAAoB,8BAAtB,EAJa;AAK7BC,IAAAA,IAAI,EAAEA,IAAI,CAACA;AALkB,GAA/B,CADmE,CAF3B;AAAA,QAElCF,KAFkC,gBAElCA,KAFkC;AAAA,QAE3BG,gBAF2B,gBAE3BA,gBAF2B;AAAA,QAETC,KAFS,gBAETA,KAFS;AAAA,QAEFH,OAFE,gBAEFA,OAFE;AAAA,QAEOC,IAFP,gBAEOA,IAFP;;AAW1Cb,EAAAA,SAAS,CAAC,MAAM;AAAA,sBACkBC,EAAE,CAACe,KAAH,CAASP,QAAQ,CAACQ,MAAlB,EAA0B;AACxDC,MAAAA,iBAAiB,EAAE;AADqC,KAA1B,CADlB;AAAA,UACNC,GADM,aACNA,GADM;AAAA,UACDC,QADC,aACDA,QADC;AAAA,UACSC,IADT,aACSA,IADT;;AAIdX,IAAAA,QAAQ,CAACJ,SAAS,CAAC;AAAEa,MAAAA,GAAF;AAAOC,MAAAA,QAAP;AAAiBC,MAAAA;AAAjB,KAAD,CAAV,CAAR;AACAX,IAAAA,QAAQ,CAACH,oBAAoB,EAArB,CAAR;AACD,GANQ,EAMN,CAACG,QAAD,EAAWD,QAAQ,CAACQ,MAApB,CANM,CAAT;AAQA,SACE,oBAAC,QAAD;AACE,IAAA,OAAO,EAAEL,OADX;AAEE,IAAA,KAAK,EAAEG,KAFT;AAGE,IAAA,KAAK,EAAEJ,KAHT;AAIE,IAAA,gBAAgB,EAAEG,gBAJpB;AAKE,IAAA,eAAe,EACbD,IAAI,KAAKA,IAAI,CAACS,IAAL,KAAc,OAAd,IAAyBT,IAAI,CAACS,IAAL,KAAc,QAA5C,CANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAWD,CA9BD;;AAgCA,eAAepB,UAAU,CAACM,iBAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\nimport qs from 'qs';\nimport { withRouter } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostList from '../../components/posts/PostList';\nimport { listPosts, listRecommendedPosts } from '../../modules/posts';\n\nconst PostListContainer = ({ location }) => {\n  const dispatch = useDispatch();\n  const { posts, recommendedPosts, error, loading, user } = useSelector(\n    ({ posts, loading, user }) => ({\n      posts: posts.posts,\n      recommendedPosts: posts.recommendedPosts,\n      error: posts.error,\n      loading: loading[('posts/LIST_POSTS', 'posts/LIST_RECOMMENDED_POSTS')],\n      user: user.user,\n    }),\n  );\n  useEffect(() => {\n    const { tag, username, page } = qs.parse(location.search, {\n      ignoreQueryPrefix: true,\n    });\n    dispatch(listPosts({ tag, username, page }));\n    dispatch(listRecommendedPosts());\n  }, [dispatch, location.search]);\n\n  return (\n    <PostList\n      loading={loading}\n      error={error}\n      posts={posts}\n      recommendedPosts={recommendedPosts}\n      showWriteButton={\n        user && (user.role === 'admin' || user.role === 'writer')\n      }\n    />\n  );\n};\n\nexport default withRouter(PostListContainer);\n"]},"metadata":{},"sourceType":"module"}