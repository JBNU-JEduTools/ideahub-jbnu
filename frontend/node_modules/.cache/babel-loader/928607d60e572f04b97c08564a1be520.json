{"ast":null,"code":"var _jsxFileName = \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\src\\\\containers\\\\contentWrite\\\\ContentEditorContainer.js\";\nimport React, { useEffect, useCallback } from 'react';\nimport ContentEditor from '../../components/contentWrite/ContentEditor';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeField, initialize, setInitialState } from '../../modules/contentWrite';\n\nconst ContentEditorContainer = () => {\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(({\n    contentWrite,\n    contestName\n  }) => ({\n    title: contentWrite.title,\n    body: contentWrite.body,\n    taggedContest: contentWrite.taggedContest,\n    videoURL: contentWrite.videoURL,\n    team: contentWrite.team,\n    status: contentWrite.status,\n    contestName: contestName.contestName\n  })),\n        title = _useSelector.title,\n        body = _useSelector.body,\n        status = _useSelector.status,\n        videoURL = _useSelector.videoURL,\n        team = _useSelector.team,\n        taggedContest = _useSelector.taggedContest;\n\n  const onChangeField = useCallback(payload => dispatch(changeField(payload)), [dispatch]);\n  useEffect(() => {\n    return () => {\n      //unmount시 contentWrite와 관련된 상태를 초기화 하는데 사용\n      dispatch(initialize());\n    };\n  }, [dispatch]);\n  return React.createElement(ContentEditor, {\n    onChangeField: onChangeField,\n    title: title,\n    body: body,\n    taggedContest: taggedContest,\n    videoURL: videoURL,\n    team: team,\n    status: status,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  });\n};\n\nexport default ContentEditorContainer;","map":{"version":3,"sources":["C:\\repusjh_Git\\cmanager-public\\frontend\\src\\containers\\contentWrite\\ContentEditorContainer.js"],"names":["React","useEffect","useCallback","ContentEditor","useSelector","useDispatch","changeField","initialize","setInitialState","ContentEditorContainer","dispatch","contentWrite","contestName","title","body","taggedContest","videoURL","team","status","onChangeField","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,OAAOC,aAAP,MAA0B,6CAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,WADF,EAEEC,UAFF,EAGEC,eAHF,QAIO,4BAJP;;AAMA,MAAMC,sBAAsB,GAAG,MAAM;AACnC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;;AADmC,uBAE4BD,WAAW,CACxE,CAAC;AAAEO,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAD,MAAoC;AAClCC,IAAAA,KAAK,EAAEF,YAAY,CAACE,KADc;AAElCC,IAAAA,IAAI,EAAEH,YAAY,CAACG,IAFe;AAGlCC,IAAAA,aAAa,EAAEJ,YAAY,CAACI,aAHM;AAIlCC,IAAAA,QAAQ,EAAEL,YAAY,CAACK,QAJW;AAKlCC,IAAAA,IAAI,EAAEN,YAAY,CAACM,IALe;AAMlCC,IAAAA,MAAM,EAAEP,YAAY,CAACO,MANa;AAOlCN,IAAAA,WAAW,EAAEA,WAAW,CAACA;AAPS,GAApC,CADwE,CAFvC;AAAA,QAE3BC,KAF2B,gBAE3BA,KAF2B;AAAA,QAEpBC,IAFoB,gBAEpBA,IAFoB;AAAA,QAEdI,MAFc,gBAEdA,MAFc;AAAA,QAENF,QAFM,gBAENA,QAFM;AAAA,QAEIC,IAFJ,gBAEIA,IAFJ;AAAA,QAEUF,aAFV,gBAEUA,aAFV;;AAanC,QAAMI,aAAa,GAAGjB,WAAW,CAC9BkB,OAAD,IAAaV,QAAQ,CAACJ,WAAW,CAACc,OAAD,CAAZ,CADU,EAE/B,CAACV,QAAD,CAF+B,CAAjC;AAKAT,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACX;AACAS,MAAAA,QAAQ,CAACH,UAAU,EAAX,CAAR;AACD,KAHD;AAID,GALQ,EAKN,CAACG,QAAD,CALM,CAAT;AAOA,SACE,oBAAC,aAAD;AACE,IAAA,aAAa,EAAES,aADjB;AAEE,IAAA,KAAK,EAAEN,KAFT;AAGE,IAAA,IAAI,EAAEC,IAHR;AAIE,IAAA,aAAa,EAAEC,aAJjB;AAKE,IAAA,QAAQ,EAAEC,QALZ;AAME,IAAA,IAAI,EAAEC,IANR;AAOE,IAAA,MAAM,EAAEC,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAWD,CApCD;;AAsCA,eAAeT,sBAAf","sourcesContent":["import React, { useEffect, useCallback } from 'react';\r\nimport ContentEditor from '../../components/contentWrite/ContentEditor';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  changeField,\r\n  initialize,\r\n  setInitialState,\r\n} from '../../modules/contentWrite';\r\n\r\nconst ContentEditorContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const { title, body, status, videoURL, team, taggedContest } = useSelector(\r\n    ({ contentWrite, contestName }) => ({\r\n      title: contentWrite.title,\r\n      body: contentWrite.body,\r\n      taggedContest: contentWrite.taggedContest,\r\n      videoURL: contentWrite.videoURL,\r\n      team: contentWrite.team,\r\n      status: contentWrite.status,\r\n      contestName: contestName.contestName,\r\n    }),\r\n  );\r\n  const onChangeField = useCallback(\r\n    (payload) => dispatch(changeField(payload)),\r\n    [dispatch],\r\n  );\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      //unmount시 contentWrite와 관련된 상태를 초기화 하는데 사용\r\n      dispatch(initialize());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ContentEditor\r\n      onChangeField={onChangeField}\r\n      title={title}\r\n      body={body}\r\n      taggedContest={taggedContest}\r\n      videoURL={videoURL}\r\n      team={team}\r\n      status={status}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ContentEditorContainer;\r\n"]},"metadata":{},"sourceType":"module"}