{"ast":null,"code":"var _jsxFileName = \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\src\\\\containers\\\\content\\\\ContentViewerContainer.js\";\nimport React, { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { readContent, unloadContent, changeComment } from '../../modules/content';\nimport ContentViewer from '../../components/content/ContentViewer';\n\nconst ContentViewerContainer = ({\n  match\n}) => {\n  const contentId = match.params.contentId;\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(({\n    content,\n    loading\n  }) => ({\n    content: content.content,\n    error: content.error,\n    loading: loading['content/READ_CONTENT']\n  })),\n        content = _useSelector.content,\n        error = _useSelector.error,\n        loading = _useSelector.loading;\n\n  const onChangeComment = useCallback(payload => dispatch(changeComment(payload)), [dispatch]);\n  useEffect(() => {\n    dispatch(readContent(contentId));\n    return () => {\n      dispatch(unloadContent());\n    };\n  }, [dispatch, contentId]);\n  return React.createElement(ContentViewer, {\n    onChangeComment: onChangeComment,\n    content: content,\n    loading: loading,\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(ContentViewerContainer);","map":{"version":3,"sources":["C:/repusjh_Git/cmanager-public/frontend/src/containers/content/ContentViewerContainer.js"],"names":["React","useEffect","useCallback","useDispatch","useSelector","withRouter","readContent","unloadContent","changeComment","ContentViewer","ContentViewerContainer","match","contentId","params","dispatch","content","loading","error","onChangeComment","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SACEC,WADF,EAEEC,aAFF,EAGEC,aAHF,QAIO,uBAJP;AAKA,OAAOC,aAAP,MAA0B,wCAA1B;;AAEA,MAAMC,sBAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA,QACpCC,SADoC,GACtBD,KAAK,CAACE,MADgB,CACpCD,SADoC;AAE5C,QAAME,QAAQ,GAAGX,WAAW,EAA5B;;AAF4C,uBAGRC,WAAW,CAAC,CAAC;AAAEW,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,MAA2B;AACzED,IAAAA,OAAO,EAAEA,OAAO,CAACA,OADwD;AAEzEE,IAAAA,KAAK,EAAEF,OAAO,CAACE,KAF0D;AAGzED,IAAAA,OAAO,EAAEA,OAAO,CAAC,sBAAD;AAHyD,GAA3B,CAAD,CAHH;AAAA,QAGpCD,OAHoC,gBAGpCA,OAHoC;AAAA,QAG3BE,KAH2B,gBAG3BA,KAH2B;AAAA,QAGpBD,OAHoB,gBAGpBA,OAHoB;;AAS5C,QAAME,eAAe,GAAGhB,WAAW,CACjCiB,OAAO,IAAIL,QAAQ,CAACN,aAAa,CAACW,OAAD,CAAd,CADc,EAEjC,CAACL,QAAD,CAFiC,CAAnC;AAKAb,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,CAACR,WAAW,CAACM,SAAD,CAAZ,CAAR;AACA,WAAO,MAAM;AACXE,MAAAA,QAAQ,CAACP,aAAa,EAAd,CAAR;AACD,KAFD;AAGD,GALQ,EAKN,CAACO,QAAD,EAAWF,SAAX,CALM,CAAT;AAOA,SACE,oBAAC,aAAD;AACE,IAAA,eAAe,EAAEM,eADnB;AAEE,IAAA,OAAO,EAAEH,OAFX;AAGE,IAAA,OAAO,EAAEC,OAHX;AAIE,IAAA,KAAK,EAAEC,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CA7BD;;AA+BA,eAAeZ,UAAU,CAACK,sBAAD,CAAzB","sourcesContent":["import React, { useEffect, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {\r\n  readContent,\r\n  unloadContent,\r\n  changeComment,\r\n} from '../../modules/content';\r\nimport ContentViewer from '../../components/content/ContentViewer';\r\n\r\nconst ContentViewerContainer = ({ match }) => {\r\n  const { contentId } = match.params;\r\n  const dispatch = useDispatch();\r\n  const { content, error, loading } = useSelector(({ content, loading }) => ({\r\n    content: content.content,\r\n    error: content.error,\r\n    loading: loading['content/READ_CONTENT'],\r\n  }));\r\n\r\n  const onChangeComment = useCallback(\r\n    payload => dispatch(changeComment(payload)),\r\n    [dispatch],\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(readContent(contentId));\r\n    return () => {\r\n      dispatch(unloadContent());\r\n    };\r\n  }, [dispatch, contentId]);\r\n\r\n  return (\r\n    <ContentViewer\r\n      onChangeComment={onChangeComment}\r\n      content={content}\r\n      loading={loading}\r\n      error={error}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(ContentViewerContainer);\r\n"]},"metadata":{},"sourceType":"module"}