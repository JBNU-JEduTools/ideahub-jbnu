{"ast":null,"code":"var _jsxFileName = \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\src\\\\containers\\\\post\\\\PrizedUpdaterContainer.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PrizedUpdater from '../../components/post/PrizedUpdater';\nimport { listContentItem } from '../../modules/post';\nimport { updatePrize } from '../../lib/api/contentPosts'; //react-router-dom을 사용해 라우트로 설정한 컴포넌트는 3가지의 props를 전달받음.\n//match: 어떤 라우트에 매칭되었는지에 대한 정보.\n//history: push, replace를 통해 다른 경로로 이동하거나 앞 뒤 페이지로 전환 가능.\n\nconst PrizedUpdaterContainer = ({\n  match,\n  history,\n  location,\n  isPrizeEmpty,\n  prized\n}) => {\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(({\n    post,\n    contentsList,\n    loading,\n    user\n  }) => ({\n    post: post.post,\n    listError: post.listError,\n    loading: loading['post/LIST_CONTENT_ITEM'],\n    contentsList: post.contentsList,\n    user: user.user\n  })),\n        post = _useSelector.post,\n        contentsList = _useSelector.contentsList,\n        listError = _useSelector.listError,\n        loading = _useSelector.loading,\n        user = _useSelector.user;\n\n  useEffect(() => {\n    dispatch(listContentItem(post.title));\n  }, [dispatch]); //수상 작품 등록 시 select에 변경이 있을 경우 즉시 실행.\n\n  const onChangePriority = ({\n    content,\n    priority\n  }) => {\n    updatePrize({\n      content,\n      priority\n    });\n  };\n\n  return React.createElement(PrizedUpdater, {\n    contents: contentsList,\n    onChangePriority: onChangePriority,\n    isPrizeEmpty: isPrizeEmpty,\n    prized: prized,\n    post: post,\n    user: user,\n    error: listError,\n    loading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(PrizedUpdaterContainer);","map":{"version":3,"sources":["C:\\repusjh_Git\\cmanager-public\\frontend\\src\\containers\\post\\PrizedUpdaterContainer.js"],"names":["React","useEffect","useDispatch","useSelector","withRouter","PrizedUpdater","listContentItem","updatePrize","PrizedUpdaterContainer","match","history","location","isPrizeEmpty","prized","dispatch","post","contentsList","loading","user","listError","title","onChangePriority","content","priority"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,WAAT,QAA4B,4BAA5B,C,CAEA;AACA;AACA;;AACA,MAAMC,sBAAsB,GAAG,CAAC;AAC9BC,EAAAA,KAD8B;AAE9BC,EAAAA,OAF8B;AAG9BC,EAAAA,QAH8B;AAI9BC,EAAAA,YAJ8B;AAK9BC,EAAAA;AAL8B,CAAD,KAMzB;AACJ,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;;AADI,uBAGqDC,WAAW,CAClE,CAAC;AAAEY,IAAAA,IAAF;AAAQC,IAAAA,YAAR;AAAsBC,IAAAA,OAAtB;AAA+BC,IAAAA;AAA/B,GAAD,MAA4C;AAC1CH,IAAAA,IAAI,EAAEA,IAAI,CAACA,IAD+B;AAE1CI,IAAAA,SAAS,EAAEJ,IAAI,CAACI,SAF0B;AAG1CF,IAAAA,OAAO,EAAEA,OAAO,CAAC,wBAAD,CAH0B;AAI1CD,IAAAA,YAAY,EAAED,IAAI,CAACC,YAJuB;AAK1CE,IAAAA,IAAI,EAAEA,IAAI,CAACA;AAL+B,GAA5C,CADkE,CAHhE;AAAA,QAGIH,IAHJ,gBAGIA,IAHJ;AAAA,QAGUC,YAHV,gBAGUA,YAHV;AAAA,QAGwBG,SAHxB,gBAGwBA,SAHxB;AAAA,QAGmCF,OAHnC,gBAGmCA,OAHnC;AAAA,QAG4CC,IAH5C,gBAG4CA,IAH5C;;AAYJjB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,CAACR,eAAe,CAACS,IAAI,CAACK,KAAN,CAAhB,CAAR;AACD,GAFQ,EAEN,CAACN,QAAD,CAFM,CAAT,CAZI,CAgBJ;;AACA,QAAMO,gBAAgB,GAAG,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,KAA2B;AAClDhB,IAAAA,WAAW,CAAC;AAAEe,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAD,CAAX;AACD,GAFD;;AAIA,SACE,oBAAC,aAAD;AACE,IAAA,QAAQ,EAAEP,YADZ;AAEE,IAAA,gBAAgB,EAAEK,gBAFpB;AAGE,IAAA,YAAY,EAAET,YAHhB;AAIE,IAAA,MAAM,EAAEC,MAJV;AAKE,IAAA,IAAI,EAAEE,IALR;AAME,IAAA,IAAI,EAAEG,IANR;AAOE,IAAA,KAAK,EAAEC,SAPT;AAQE,IAAA,OAAO,EAAEF,OARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAYD,CAvCD;;AAyCA,eAAeb,UAAU,CAACI,sBAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PrizedUpdater from '../../components/post/PrizedUpdater';\r\nimport { listContentItem } from '../../modules/post';\r\nimport { updatePrize } from '../../lib/api/contentPosts';\r\n\r\n//react-router-dom을 사용해 라우트로 설정한 컴포넌트는 3가지의 props를 전달받음.\r\n//match: 어떤 라우트에 매칭되었는지에 대한 정보.\r\n//history: push, replace를 통해 다른 경로로 이동하거나 앞 뒤 페이지로 전환 가능.\r\nconst PrizedUpdaterContainer = ({\r\n  match,\r\n  history,\r\n  location,\r\n  isPrizeEmpty,\r\n  prized,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { post, contentsList, listError, loading, user } = useSelector(\r\n    ({ post, contentsList, loading, user }) => ({\r\n      post: post.post,\r\n      listError: post.listError,\r\n      loading: loading['post/LIST_CONTENT_ITEM'],\r\n      contentsList: post.contentsList,\r\n      user: user.user,\r\n    }),\r\n  );\r\n  useEffect(() => {\r\n    dispatch(listContentItem(post.title));\r\n  }, [dispatch]);\r\n\r\n  //수상 작품 등록 시 select에 변경이 있을 경우 즉시 실행.\r\n  const onChangePriority = ({ content, priority }) => {\r\n    updatePrize({ content, priority });\r\n  };\r\n\r\n  return (\r\n    <PrizedUpdater\r\n      contents={contentsList}\r\n      onChangePriority={onChangePriority}\r\n      isPrizeEmpty={isPrizeEmpty}\r\n      prized={prized}\r\n      post={post}\r\n      user={user}\r\n      error={listError}\r\n      loading={loading}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(PrizedUpdaterContainer);\r\n"]},"metadata":{},"sourceType":"module"}