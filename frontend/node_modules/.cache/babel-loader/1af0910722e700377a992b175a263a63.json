{"ast":null,"code":"var _jsxFileName = \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\src\\\\containers\\\\contentWrite\\\\ContentWriteActionButtonsContainer.js\";\nimport React, { useEffect } from 'react';\nimport ContentWriteActionButtons from '../../components/contentWrite/ContentWriteActionButton';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { contentWritePost, updateContent } from '../../modules/contentWrite';\n\nconst ContentWriteActionButtonsContainer = ({\n  history\n}) => {\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(({\n    contentWrite,\n    contestName\n  }) => ({\n    title: contentWrite.title,\n    body: contentWrite.body,\n    taggedContest: contentWrite.taggedContest,\n    videoURL: contentWrite.videoURL,\n    team: contentWrite.team,\n    status: contentWrite.status,\n    content: contentWrite.content,\n    contentError: contentWrite.contentError,\n    originalContentId: contentWrite.originalContentId,\n    contestName: contestName.contestName\n  })),\n        title = _useSelector.title,\n        body = _useSelector.body,\n        taggedContest = _useSelector.taggedContest,\n        videoURL = _useSelector.videoURL,\n        team = _useSelector.team,\n        status = _useSelector.status,\n        content = _useSelector.content,\n        contentError = _useSelector.contentError,\n        originalContentId = _useSelector.originalContentId,\n        contestName = _useSelector.contestName;\n\n  const onPublish = () => {\n    if (originalContentId) {\n      dispatch(updateContent({\n        title,\n        body,\n        taggedContest,\n        videoURL,\n        team,\n        status,\n        id: originalContentId\n      }));\n      return;\n    }\n\n    dispatch(contentWritePost({\n      title,\n      body,\n      taggedContest,\n      videoURL,\n      team,\n      status\n    }));\n  };\n\n  const onCancel = () => {\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (content) {\n      const _id = content._id,\n            user = content.user;\n      history.push(\"/content/\".concat(_id));\n    }\n\n    if (contentError) {\n      console.log(contentError);\n    }\n  }, [history, content, contentError]);\n  return React.createElement(ContentWriteActionButtons, {\n    onPublish: onPublish,\n    onCancel: onCancel,\n    isEdit: !!originalContentId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(ContentWriteActionButtonsContainer);","map":{"version":3,"sources":["C:/repusjh_Git/cmanager-public/frontend/src/containers/contentWrite/ContentWriteActionButtonsContainer.js"],"names":["React","useEffect","ContentWriteActionButtons","useSelector","useDispatch","withRouter","contentWritePost","updateContent","ContentWriteActionButtonsContainer","history","dispatch","contentWrite","contestName","title","body","taggedContest","videoURL","team","status","content","contentError","originalContentId","onPublish","id","onCancel","goBack","_id","user","push","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport ContentWriteActionButtons from '../../components/contentWrite/ContentWriteActionButton';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { contentWritePost, updateContent } from '../../modules/contentWrite';\r\n\r\nconst ContentWriteActionButtonsContainer = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    title,\r\n    body,\r\n    taggedContest,\r\n    videoURL,\r\n    team,\r\n    status,\r\n    content,\r\n    contentError,\r\n    originalContentId,\r\n    contestName,\r\n  } = useSelector(({ contentWrite, contestName }) => ({\r\n    title: contentWrite.title,\r\n    body: contentWrite.body,\r\n    taggedContest: contentWrite.taggedContest,\r\n    videoURL: contentWrite.videoURL,\r\n    team: contentWrite.team,\r\n    status: contentWrite.status,\r\n    content: contentWrite.content,\r\n    contentError: contentWrite.contentError,\r\n    originalContentId: contentWrite.originalContentId,\r\n    contestName: contestName.contestName,\r\n  }));\r\n\r\n  const onPublish = () => {\r\n    if (originalContentId) {\r\n      dispatch(\r\n        updateContent({\r\n          title,\r\n          body,\r\n          taggedContest,\r\n          videoURL,\r\n          team,\r\n          status,\r\n          id: originalContentId,\r\n        }),\r\n      );\r\n      return;\r\n    }\r\n    dispatch(\r\n      contentWritePost({\r\n        title,\r\n        body,\r\n        taggedContest,\r\n        videoURL,\r\n        team,\r\n        status,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (content) {\r\n      const { _id, user } = content;\r\n      history.push(`/content/${_id}`);\r\n    }\r\n    if (contentError) {\r\n      console.log(contentError);\r\n    }\r\n  }, [history, content, contentError]);\r\n  return (\r\n    <ContentWriteActionButtons\r\n      onPublish={onPublish}\r\n      onCancel={onCancel}\r\n      isEdit={!!originalContentId}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(ContentWriteActionButtonsContainer);\r\n"]},"metadata":{},"sourceType":"module"}