{"ast":null,"code":"import _defineProperty from \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nimport * as contentsAPI from '../lib/api/contentPosts';\nimport { takeLatest } from 'redux-saga/effects';\n/*\r\n  READ_CONTENT = 'CONTENT/READ_CONTENT';\r\n  READ_CONTENT_SUCCESS = 'CONTENT/READ_CONTENT_SUCCESS';\r\n  READ_CONTENT_FAILURE = 'CONTENT/READ_CONTENT_FAILURE';\r\n*/\n\nconst _createRequestActionT = createRequestActionTypes('content/READ_CONTENT'),\n      _createRequestActionT2 = _slicedToArray(_createRequestActionT, 3),\n      READ_CONTENT = _createRequestActionT2[0],\n      READ_CONTENT_SUCCESS = _createRequestActionT2[1],\n      READ_CONTENT_FAILURE = _createRequestActionT2[2];\n\nconst UNLOAD_CONTENT = 'content/UNLOAD_CONTENT'; //flushes data, leaving CONTENT page.\n\nexport const readContent = createAction(READ_CONTENT, id => id);\nexport const unloadContent = createAction(UNLOAD_CONTENT);\nconst readContentSaga = createRequestSaga(READ_CONTENT, contentsAPI.readContent);\nexport function* contentSaga() {\n  yield takeLatest(READ_CONTENT, readContentSaga);\n} //initial state\n\nconst initialState = {\n  content: null,\n  error: null\n}; //reducer\n\nconst content = handleActions({\n  //actionType: (state, action) => newState\n  [READ_CONTENT_SUCCESS]: (state, {\n    payload: content\n  }) => _objectSpread({}, state, {\n    content\n  }),\n  [READ_CONTENT_FAILURE]: (state, {\n    payload: error\n  }) => _objectSpread({}, state, {\n    error\n  }),\n  //flushes data, leaving content page.\n  [UNLOAD_CONTENT]: () => initialState\n}, initialState);\nexport default content;","map":{"version":3,"sources":["C:/repusjh_Git/cmanager-public/frontend/src/modules/content.js"],"names":["createAction","handleActions","createRequestSaga","createRequestActionTypes","contentsAPI","takeLatest","READ_CONTENT","READ_CONTENT_SUCCESS","READ_CONTENT_FAILURE","UNLOAD_CONTENT","readContent","id","unloadContent","readContentSaga","contentSaga","initialState","content","error","state","payload"],"mappings":";;;;;;;AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,OAAOC,iBAAP,IACEC,wBADF,QAEO,0BAFP;AAGA,OAAO,KAAKC,WAAZ,MAA6B,yBAA7B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA;;;;;;8BASIF,wBAAwB,CAAC,sBAAD,C;;MAH1BG,Y;MACAC,oB;MACAC,oB;;AAEF,MAAMC,cAAc,GAAG,wBAAvB,C,CAAiD;;AAEjD,OAAO,MAAMC,WAAW,GAAGV,YAAY,CAACM,YAAD,EAAeK,EAAE,IAAIA,EAArB,CAAhC;AACP,OAAO,MAAMC,aAAa,GAAGZ,YAAY,CAACS,cAAD,CAAlC;AAEP,MAAMI,eAAe,GAAGX,iBAAiB,CACvCI,YADuC,EAEvCF,WAAW,CAACM,WAF2B,CAAzC;AAIA,OAAO,UAAUI,WAAV,GAAwB;AAC7B,QAAMT,UAAU,CAACC,YAAD,EAAeO,eAAf,CAAhB;AACD,C,CACD;;AACA,MAAME,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,IADU;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB,C,CAIA;;AACA,MAAMD,OAAO,GAAGf,aAAa,CAC3B;AACE;AACA,GAACM,oBAAD,GAAwB,CAACW,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEH;AAAX,GAAR,uBACnBE,KADmB;AAEtBF,IAAAA;AAFsB,IAF1B;AAME,GAACR,oBAAD,GAAwB,CAACU,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEF;AAAX,GAAR,uBACnBC,KADmB;AAEtBD,IAAAA;AAFsB,IAN1B;AAUE;AACA,GAACR,cAAD,GAAkB,MAAMM;AAX1B,CAD2B,EAc3BA,YAd2B,CAA7B;AAiBA,eAAeC,OAAf","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from '../lib/createRequestSaga';\r\nimport * as contentsAPI from '../lib/api/contentPosts';\r\nimport { takeLatest } from 'redux-saga/effects';\r\n\r\n/*\r\n  READ_CONTENT = 'CONTENT/READ_CONTENT';\r\n  READ_CONTENT_SUCCESS = 'CONTENT/READ_CONTENT_SUCCESS';\r\n  READ_CONTENT_FAILURE = 'CONTENT/READ_CONTENT_FAILURE';\r\n*/\r\nconst [\r\n  READ_CONTENT,\r\n  READ_CONTENT_SUCCESS,\r\n  READ_CONTENT_FAILURE,\r\n] = createRequestActionTypes('content/READ_CONTENT');\r\nconst UNLOAD_CONTENT = 'content/UNLOAD_CONTENT'; //flushes data, leaving CONTENT page.\r\n\r\nexport const readContent = createAction(READ_CONTENT, id => id);\r\nexport const unloadContent = createAction(UNLOAD_CONTENT);\r\n\r\nconst readContentSaga = createRequestSaga(\r\n  READ_CONTENT,\r\n  contentsAPI.readContent,\r\n);\r\nexport function* contentSaga() {\r\n  yield takeLatest(READ_CONTENT, readContentSaga);\r\n}\r\n//initial state\r\nconst initialState = {\r\n  content: null,\r\n  error: null,\r\n};\r\n//reducer\r\nconst content = handleActions(\r\n  {\r\n    //actionType: (state, action) => newState\r\n    [READ_CONTENT_SUCCESS]: (state, { payload: content }) => ({\r\n      ...state,\r\n      content,\r\n    }),\r\n    [READ_CONTENT_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    //flushes data, leaving content page.\r\n    [UNLOAD_CONTENT]: () => initialState,\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default content;\r\n"]},"metadata":{},"sourceType":"module"}