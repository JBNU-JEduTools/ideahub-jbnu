{"ast":null,"code":"import _defineProperty from \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//가장 최근에 열어본 대회의 title을 contestName 상태에 저장.\n//이를 작품 등록시 taggedContest로 넘겨주기 위함.\n//대회 페이지 로드시 채워지도록 함.\nimport { createAction, handleActions } from 'redux-actions'; //액션 타입 정의\n\nconst SET_CONTEST_NAME = 'contestName/SET_CONTEST_NAME';\nconst RESET_CONTEST_NAME = 'contestName/RESET_CONTEST_NAME'; //페이지를 벗어날 때 contestName 상태를 초기화해주기 위함\n\nexport const setContestName = createAction(SET_CONTEST_NAME, contestName => contestName); //페이지를 벗어날 때 contestName 상태를 초기화해주기 위함\n\nexport const resetContestName = createAction(RESET_CONTEST_NAME); //initial state\n\nconst initialState = {\n  contestName: ''\n}; //reducer\n\nconst contestName = handleActions({\n  [SET_CONTEST_NAME]: (state, payload) => _objectSpread({}, state, {\n    contestName: payload.title\n  }),\n  [RESET_CONTEST_NAME]: () => ''\n}, initialState);\nexport default contestName;","map":{"version":3,"sources":["C:/repusjh_Git/cmanager-public/frontend/src/modules/contestName.js"],"names":["createAction","handleActions","SET_CONTEST_NAME","RESET_CONTEST_NAME","setContestName","contestName","resetContestName","initialState","state","payload","title"],"mappings":";;;;;;AAAA;AACA;AACA;AAEA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C,C,CAEA;;AACA,MAAMC,gBAAgB,GAAG,8BAAzB;AACA,MAAMC,kBAAkB,GAAG,gCAA3B,C,CAA6D;;AAE7D,OAAO,MAAMC,cAAc,GAAGJ,YAAY,CACxCE,gBADwC,EAExCG,WAAW,IAAIA,WAFyB,CAAnC,C,CAIP;;AACA,OAAO,MAAMC,gBAAgB,GAAGN,YAAY,CAACG,kBAAD,CAArC,C,CAEP;;AACA,MAAMI,YAAY,GAAG;AACnBF,EAAAA,WAAW,EAAE;AADM,CAArB,C,CAIA;;AACA,MAAMA,WAAW,GAAGJ,aAAa,CAC/B;AACE,GAACC,gBAAD,GAAoB,CAACM,KAAD,EAAQC,OAAR,uBACfD,KADe;AAElBH,IAAAA,WAAW,EAAEI,OAAO,CAACC;AAFH,IADtB;AAKE,GAACP,kBAAD,GAAsB,MAAM;AAL9B,CAD+B,EAQ/BI,YAR+B,CAAjC;AAWA,eAAeF,WAAf","sourcesContent":["//가장 최근에 열어본 대회의 title을 contestName 상태에 저장.\r\n//이를 작품 등록시 taggedContest로 넘겨주기 위함.\r\n//대회 페이지 로드시 채워지도록 함.\r\n\r\nimport { createAction, handleActions } from 'redux-actions';\r\n\r\n//액션 타입 정의\r\nconst SET_CONTEST_NAME = 'contestName/SET_CONTEST_NAME';\r\nconst RESET_CONTEST_NAME = 'contestName/RESET_CONTEST_NAME'; //페이지를 벗어날 때 contestName 상태를 초기화해주기 위함\r\n\r\nexport const setContestName = createAction(\r\n  SET_CONTEST_NAME,\r\n  contestName => contestName,\r\n);\r\n//페이지를 벗어날 때 contestName 상태를 초기화해주기 위함\r\nexport const resetContestName = createAction(RESET_CONTEST_NAME);\r\n\r\n//initial state\r\nconst initialState = {\r\n  contestName: '',\r\n};\r\n\r\n//reducer\r\nconst contestName = handleActions(\r\n  {\r\n    [SET_CONTEST_NAME]: (state, payload) => ({\r\n      ...state,\r\n      contestName: payload.title,\r\n    }),\r\n    [RESET_CONTEST_NAME]: () => '',\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default contestName;\r\n"]},"metadata":{},"sourceType":"module"}