{"ast":null,"code":"import { call, put } from 'redux-saga/effects';\nimport { startLoading, finishLoading } from '../modules/loading';\nexport const createRequestActionTypes = type => {\n  const SUCCESS = \"\".concat(type, \"_SUCCESS\");\n  const FAILURE = \"\".concat(type, \"_FAILURE\");\n  return [type, SUCCESS, FAILURE];\n};\nexport default function createRequestSaga(type, request) {\n  const SUCCESS = \"\".concat(type, \"_SUCCESS\");\n  const FAILURE = \"\".concat(type, \"_FAILURE\");\n  return function* (action) {\n    yield put(startLoading(type));\n\n    try {\n      const response = yield call(request, action.payload);\n      yield put({\n        type: SUCCESS,\n        payload: response.data,\n        meta: response\n      });\n    } catch (e) {\n      yield put({\n        type: FAILURE,\n        payload: e,\n        error: true\n      });\n    }\n\n    yield put(finishLoading(type));\n  };\n}","map":{"version":3,"sources":["/Users/qwerasdf_ho/Desktop/ideaHub/frontend/src/lib/createRequestSaga.js"],"names":["call","put","startLoading","finishLoading","createRequestActionTypes","type","SUCCESS","FAILURE","createRequestSaga","request","action","response","payload","data","meta","e","error"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,oBAA5C;AAEA,OAAO,MAAMC,wBAAwB,GAAGC,IAAI,IAAI;AAC9C,QAAMC,OAAO,aAAMD,IAAN,aAAb;AACA,QAAME,OAAO,aAAMF,IAAN,aAAb;AACA,SAAO,CAACA,IAAD,EAAOC,OAAP,EAAgBC,OAAhB,CAAP;AACD,CAJM;AAMP,eAAe,SAASC,iBAAT,CAA2BH,IAA3B,EAAiCI,OAAjC,EAA0C;AACvD,QAAMH,OAAO,aAAMD,IAAN,aAAb;AACA,QAAME,OAAO,aAAMF,IAAN,aAAb;AAEA,SAAO,WAAUK,MAAV,EAAkB;AACvB,UAAMT,GAAG,CAACC,YAAY,CAACG,IAAD,CAAb,CAAT;;AACA,QAAI;AACF,YAAMM,QAAQ,GAAG,MAAMX,IAAI,CAACS,OAAD,EAAUC,MAAM,CAACE,OAAjB,CAA3B;AACA,YAAMX,GAAG,CAAC;AACRI,QAAAA,IAAI,EAAEC,OADE;AAERM,QAAAA,OAAO,EAAED,QAAQ,CAACE,IAFV;AAGRC,QAAAA,IAAI,EAAEH;AAHE,OAAD,CAAT;AAKD,KAPD,CAOE,OAAOI,CAAP,EAAU;AACV,YAAMd,GAAG,CAAC;AACRI,QAAAA,IAAI,EAAEE,OADE;AAERK,QAAAA,OAAO,EAAEG,CAFD;AAGRC,QAAAA,KAAK,EAAE;AAHC,OAAD,CAAT;AAKD;;AACD,UAAMf,GAAG,CAACE,aAAa,CAACE,IAAD,CAAd,CAAT;AACD,GAjBD;AAkBD","sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport { startLoading, finishLoading } from '../modules/loading';\n\nexport const createRequestActionTypes = type => {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n  return [type, SUCCESS, FAILURE];\n};\n\nexport default function createRequestSaga(type, request) {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n\n  return function*(action) {\n    yield put(startLoading(type));\n    try {\n      const response = yield call(request, action.payload);\n      yield put({\n        type: SUCCESS,\n        payload: response.data,\n        meta: response,\n      });\n    } catch (e) {\n      yield put({\n        type: FAILURE,\n        payload: e,\n        error: true,\n      });\n    }\n    yield put(finishLoading(type));\n  };\n}\n"]},"metadata":{},"sourceType":"module"}