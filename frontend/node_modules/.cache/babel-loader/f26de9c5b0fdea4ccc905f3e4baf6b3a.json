{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\src\\\\components\\\\main\\\\MainViewer.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  height: 16rem;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  margin-top: 3rem;\\n  text-align: center;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport Responsive from '../common/Responsive';\nimport Button from '../common/Button';\nimport palette from '../../lib/styles/palette';\nimport { Link } from 'react-router-dom';\nimport FeaturedWorks from './FeaturedWorks';\nimport ErrorNotifier from '../common/ErrorNotifier';\nimport PrizedWorks from './PrizedWorks';\nconst MainViewerBlock = styled(Responsive)(_templateObject());\nconst Spacer = styled.div(_templateObject2());\n\nconst MainViewer = ({\n  contents,\n  loading,\n  error\n}) => {\n  if (error) {\n    return React.createElement(ErrorNotifier, {\n      errorTitle: \"ERROR!\",\n      errorMessage: \"\\uD398\\uC774\\uC9C0\\uB97C \\uB85C\\uB4DC\\uD560 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    });\n  }\n\n  let featuredWorks = null;\n  let prizedWorks = null;\n\n  if (!loading && contents) {\n    //star 개수 순으로 작품들을 정렬.\n    featuredWorks = contents.sort( //sort의 파라미터로 순서를 정해주는 함수를 넣어줌\n    (content1, content2) => {\n      return content1.stars <= content2.stars ? 1 : -1;\n    }); //수상 우선순위 순으로 작품들을 정렬\n\n    prizedWorks = contents //수상 우선순위가 숫자인(수상 목록 안에 있는) 작품들을 filter한 뒤,\n    .filter(item => {\n      return !isNaN(item.prizedPlace);\n    }).sort( //우선순위가 높은(숫자 크기가 작은) 작품들을 앞에 보여줌.\n    //sort의 파라미터로 순서를 정해주는 함수를 넣어줌\n    (content1, content2) => {\n      return content1.prizedPlace <= content2.prizedPlace ? -1 : 1;\n    }); //현재 브라우저의 해상도를 저장하는 객체\n\n    let mediaSize = {\n      width: window.innerWidth || document.body.clientWidth,\n      height: window.innerHeight || document.body.clientHeight\n    }; //가로 해상도가 1152px 이상일 경우, 768이상일 경우, 그 미만일 경우에 따라 보여지는 featured works 개수 조정.\n    //모바일, 태블릿 환경에서 접속 시 featured works로 인해 화면이 뒤덮이는 현상을 방지하기 위함.\n    //다만, 데스크탑 브라우저로 접속 후에 해상도를 변경했을 경우, 이미 로드된 featured works 개수가 실시간으로 변하지는 않으므로, 차후 수정이 필요할 수 있음\n\n    if (mediaSize.width > 1152) {\n      featuredWorks.length = 8;\n      prizedWorks.length = 8;\n    } else if (mediaSize.width > 768) {\n      featuredWorks.length = 6;\n      prizedWorks.length = 6;\n    } else {\n      featuredWorks.length = 4;\n      prizedWorks.length = 4;\n    }\n  }\n\n  return React.createElement(React.Fragment, null, !loading && contents && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(FeaturedWorks, {\n    featuredWorks: featuredWorks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(PrizedWorks, {\n    prizedWorks: prizedWorks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }));\n};\n\nexport default MainViewer;","map":{"version":3,"sources":["C:\\repusjh_Git\\cmanager-public\\frontend\\src\\components\\main\\MainViewer.js"],"names":["React","styled","Responsive","Button","palette","Link","FeaturedWorks","ErrorNotifier","PrizedWorks","MainViewerBlock","Spacer","div","MainViewer","contents","loading","error","featuredWorks","prizedWorks","sort","content1","content2","stars","filter","item","isNaN","prizedPlace","mediaSize","width","window","innerWidth","document","body","clientWidth","height","innerHeight","clientHeight","length"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAMC,eAAe,GAAGR,MAAM,CAACC,UAAD,CAAT,mBAArB;AAKA,MAAMQ,MAAM,GAAGT,MAAM,CAACU,GAAV,oBAAZ;;AAIA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA;AAArB,CAAD,KAAkC;AACnD,MAAIA,KAAJ,EAAW;AACT,WACE,oBAAC,aAAD;AACE,MAAA,UAAU,EAAC,QADb;AAEE,MAAA,YAAY,EAAC,8EAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD;;AAED,MAAIC,aAAa,GAAG,IAApB;AACA,MAAIC,WAAW,GAAG,IAAlB;;AAEA,MAAI,CAACH,OAAD,IAAYD,QAAhB,EAA0B;AACxB;AACAG,IAAAA,aAAa,GAAGH,QAAQ,CAACK,IAAT,EACd;AACA,KAACC,QAAD,EAAWC,QAAX,KAAwB;AACtB,aAAOD,QAAQ,CAACE,KAAT,IAAkBD,QAAQ,CAACC,KAA3B,GAAmC,CAAnC,GAAuC,CAAC,CAA/C;AACD,KAJa,CAAhB,CAFwB,CAQxB;;AACAJ,IAAAA,WAAW,GAAGJ,QAAQ,CACpB;AADoB,KAEnBS,MAFW,CAEHC,IAAD,IAAU;AAChB,aAAO,CAACC,KAAK,CAACD,IAAI,CAACE,WAAN,CAAb;AACD,KAJW,EAKXP,IALW,EAMV;AACA;AACA,KAACC,QAAD,EAAWC,QAAX,KAAwB;AACtB,aAAOD,QAAQ,CAACM,WAAT,IAAwBL,QAAQ,CAACK,WAAjC,GAA+C,CAAC,CAAhD,GAAoD,CAA3D;AACD,KAVS,CAAd,CATwB,CAsBxB;;AACA,QAAIC,SAAS,GAAG;AACdC,MAAAA,KAAK,EAAEC,MAAM,CAACC,UAAP,IAAqBC,QAAQ,CAACC,IAAT,CAAcC,WAD5B;AAEdC,MAAAA,MAAM,EAAEL,MAAM,CAACM,WAAP,IAAsBJ,QAAQ,CAACC,IAAT,CAAcI;AAF9B,KAAhB,CAvBwB,CA4BxB;AACA;AACA;;AACA,QAAIT,SAAS,CAACC,KAAV,GAAkB,IAAtB,EAA4B;AAC1BX,MAAAA,aAAa,CAACoB,MAAd,GAAuB,CAAvB;AACAnB,MAAAA,WAAW,CAACmB,MAAZ,GAAqB,CAArB;AACD,KAHD,MAGO,IAAIV,SAAS,CAACC,KAAV,GAAkB,GAAtB,EAA2B;AAChCX,MAAAA,aAAa,CAACoB,MAAd,GAAuB,CAAvB;AACAnB,MAAAA,WAAW,CAACmB,MAAZ,GAAqB,CAArB;AACD,KAHM,MAGA;AACLpB,MAAAA,aAAa,CAACoB,MAAd,GAAuB,CAAvB;AACAnB,MAAAA,WAAW,CAACmB,MAAZ,GAAqB,CAArB;AACD;AACF;;AAED,SACE,0CACG,CAACtB,OAAD,IAAYD,QAAZ,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAe,IAAA,aAAa,EAAEG,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,WAAD;AAAa,IAAA,WAAW,EAAEC,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFJ,EAQE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAYD,CApED;;AAsEA,eAAeL,UAAf","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../common/Responsive';\r\nimport Button from '../common/Button';\r\nimport palette from '../../lib/styles/palette';\r\nimport { Link } from 'react-router-dom';\r\nimport FeaturedWorks from './FeaturedWorks';\r\nimport ErrorNotifier from '../common/ErrorNotifier';\r\nimport PrizedWorks from './PrizedWorks';\r\n\r\nconst MainViewerBlock = styled(Responsive)`\r\n  margin-top: 3rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst Spacer = styled.div`\r\n  height: 16rem;\r\n`;\r\n\r\nconst MainViewer = ({ contents, loading, error }) => {\r\n  if (error) {\r\n    return (\r\n      <ErrorNotifier\r\n        errorTitle=\"ERROR!\"\r\n        errorMessage=\"페이지를 로드할 수 없습니다.\"\r\n      />\r\n    );\r\n  }\r\n\r\n  let featuredWorks = null;\r\n  let prizedWorks = null;\r\n\r\n  if (!loading && contents) {\r\n    //star 개수 순으로 작품들을 정렬.\r\n    featuredWorks = contents.sort(\r\n      //sort의 파라미터로 순서를 정해주는 함수를 넣어줌\r\n      (content1, content2) => {\r\n        return content1.stars <= content2.stars ? 1 : -1;\r\n      },\r\n    );\r\n    //수상 우선순위 순으로 작품들을 정렬\r\n    prizedWorks = contents\r\n      //수상 우선순위가 숫자인(수상 목록 안에 있는) 작품들을 filter한 뒤,\r\n      .filter((item) => {\r\n        return !isNaN(item.prizedPlace);\r\n      })\r\n      .sort(\r\n        //우선순위가 높은(숫자 크기가 작은) 작품들을 앞에 보여줌.\r\n        //sort의 파라미터로 순서를 정해주는 함수를 넣어줌\r\n        (content1, content2) => {\r\n          return content1.prizedPlace <= content2.prizedPlace ? -1 : 1;\r\n        },\r\n      );\r\n\r\n    //현재 브라우저의 해상도를 저장하는 객체\r\n    let mediaSize = {\r\n      width: window.innerWidth || document.body.clientWidth,\r\n      height: window.innerHeight || document.body.clientHeight,\r\n    };\r\n\r\n    //가로 해상도가 1152px 이상일 경우, 768이상일 경우, 그 미만일 경우에 따라 보여지는 featured works 개수 조정.\r\n    //모바일, 태블릿 환경에서 접속 시 featured works로 인해 화면이 뒤덮이는 현상을 방지하기 위함.\r\n    //다만, 데스크탑 브라우저로 접속 후에 해상도를 변경했을 경우, 이미 로드된 featured works 개수가 실시간으로 변하지는 않으므로, 차후 수정이 필요할 수 있음\r\n    if (mediaSize.width > 1152) {\r\n      featuredWorks.length = 8;\r\n      prizedWorks.length = 8;\r\n    } else if (mediaSize.width > 768) {\r\n      featuredWorks.length = 6;\r\n      prizedWorks.length = 6;\r\n    } else {\r\n      featuredWorks.length = 4;\r\n      prizedWorks.length = 4;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!loading && contents && (\r\n        <div>\r\n          <FeaturedWorks featuredWorks={featuredWorks} />\r\n          <PrizedWorks prizedWorks={prizedWorks} />\r\n        </div>\r\n      )}\r\n\r\n      <Spacer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainViewer;\r\n"]},"metadata":{},"sourceType":"module"}