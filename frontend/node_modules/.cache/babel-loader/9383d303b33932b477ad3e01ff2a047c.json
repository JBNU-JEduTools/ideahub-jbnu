{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skyai\\\\Desktop\\\\cmanager\\\\frontend\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer, { rootSaga } from './modules';\nimport { tempSetUser, check } from './modules/user';\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware))); //load user info from local storage when first rendering happens.\n\nfunction loadUser() {\n  try {\n    const user = localStorage.getItem('user'); //do nothing if user info is not in local storage.\n\n    if (!user) return; //put user info into redux store if user info is in local storage.\n\n    store.dispatch(tempSetUser(user)); //check if user logged in\n\n    store.dispatch(check());\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nsagaMiddleware.run(rootSaga);\nloadUser();\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}))), document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["C:\\Users\\skyai\\Desktop\\cmanager\\frontend\\src\\index.js"],"names":["React","ReactDOM","App","serviceWorker","BrowserRouter","Provider","createStore","applyMiddleware","composeWithDevTools","createSagaMiddleware","rootReducer","rootSaga","tempSetUser","check","sagaMiddleware","store","loadUser","user","localStorage","getItem","dispatch","e","console","log","run","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,WAAP,IAAsBC,QAAtB,QAAsC,WAAtC;AACA,SAASC,WAAT,EAAsBC,KAAtB,QAAmC,gBAAnC;AAEA,MAAMC,cAAc,GAAGL,oBAAoB,EAA3C;AAEA,MAAMM,KAAK,GAAGT,WAAW,CACvBI,WADuB,EAEvBF,mBAAmB,CAACD,eAAe,CAACO,cAAD,CAAhB,CAFI,CAAzB,C,CAKA;;AACA,SAASE,QAAT,GAAoB;AAClB,MAAI;AACF,UAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb,CADE,CAEF;;AACA,QAAI,CAACF,IAAL,EAAW,OAHT,CAKF;;AACAF,IAAAA,KAAK,CAACK,QAAN,CAAeR,WAAW,CAACK,IAAD,CAA1B,EANE,CAOF;;AACAF,IAAAA,KAAK,CAACK,QAAN,CAAeP,KAAK,EAApB;AACD,GATD,CASE,OAAOQ,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF;;AAEDP,cAAc,CAACU,GAAf,CAAmBb,QAAnB;AACAK,QAAQ;AAERf,QAAQ,CAACwB,MAAT,CACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEV,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,EAMEW,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF;AASAxB,aAAa,CAACyB,UAAd","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer, { rootSaga } from './modules';\r\nimport { tempSetUser, check } from './modules/user';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\r\n);\r\n\r\n//load user info from local storage when first rendering happens.\r\nfunction loadUser() {\r\n  try {\r\n    const user = localStorage.getItem('user');\r\n    //do nothing if user info is not in local storage.\r\n    if (!user) return;\r\n\r\n    //put user info into redux store if user info is in local storage.\r\n    store.dispatch(tempSetUser(user));\r\n    //check if user logged in\r\n    store.dispatch(check());\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nsagaMiddleware.run(rootSaga);\r\nloadUser();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\nserviceWorker.unregister();\r\n"]},"metadata":{},"sourceType":"module"}