{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\src\\\\components\\\\post\\\\PrizedList.js\";\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  display: flex;\\n  margin: 3rem 0;\\n  img {\\n    height: 15rem;\\n    @media (max-width: 1152px) {\\n      height: 8rem;\\n    }\\n    @media (max-width: 768px) {\\n      height: 5rem;\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  @font-face {\\n    font-family: 'MapoGoldenPier';\\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2001@1.1/MapoGoldenPierA.woff')\\n      format('woff');\\n    font-weight: normal;\\n    font-style: normal;\\n  }\\n\\n  text-align: center;\\n  color: \", \";\\n  padding-top: 1rem;\\n\\n  h1 {\\n    font-size: 3rem;\\n    margin: 0;\\n    font-family: 'MapoGoldenPier';\\n    font-weight: 500;\\n    @media (max-width: 1152px) {\\n      font-size: 2rem;\\n    }\\n    @media (max-width: 768px) {\\n      font-size: 1rem;\\n    }\\n  }\\n  h2 {\\n    font-size: 6rem;\\n    margin: 0;\\n    font-family: 'MapoGoldenPier';\\n    font-weight: 500;\\n    @media (max-width: 1152px) {\\n      font-size: 4rem;\\n    }\\n    @media (max-width: 768px) {\\n      font-size: 2rem;\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  float: right;\\n  padding: 1rem;\\n  border-radius: 5px;\\n  margin-bottom: 0.5rem;\\n  word-break: break-all;\\n  background: white;\\n  color: black;\\n  box-shadow: -1px 1px 3px 0px rgba(0, 0, 0, 0.5);\\n  p {\\n    margin-top: 2rem;\\n    margin-bottom: 2rem;\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  margin-top: 3rem;\\n  display: inline;\\n  align-content: center;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\n//수상 작품 목록이 등록되어 있을 경우, 그 목록을 보여주는 컴포넌트.\nimport React from 'react';\nimport palette from '../../lib/styles/palette';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Responsive from '../common/Responsive';\nimport prizeLeft from '../../images/prizeLeft.png';\nimport prizeRight from '../../images/prizeRight.png';\nconst PrizedListHolder = styled(Responsive)(_templateObject());\nconst PrizedItemHolder = styled(Link)(_templateObject2()); //대회 제목 & '수상 작품 목록' 글자 홀더\n\nconst TitleHolder = styled.div(_templateObject3(), palette.gray[8]);\nconst TitleImgHolder = styled.div(_templateObject4());\nconst WholeContentsHoler = styled.div(_templateObject5()); //prizedItem는 post 객체 내의 배열 prized의 각각의 element를 나타냄.\n\nconst PrizedItem = ({\n  prizedItem\n}) => {\n  const _id = prizedItem._id,\n        title = prizedItem.title,\n        team = prizedItem.team;\n  return React.createElement(PrizedItemHolder, {\n    to: \"/content/\".concat(_id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, title), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, team));\n}; //prized는 post 객체 내의 배열 prized. prizedItem 객체의 배열임.\n//수정: 해당 대회에 속한 작품들의 리스트인 'contentList' 에서, 우선순위가 정해진 작품들만 로드\n\n\nconst PrizedList = ({\n  prized,\n  post\n}) => {\n  const title = post.title;\n  return React.createElement(WholeContentsHoler, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(TitleImgHolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: prizeLeft,\n    alter: \"prizeLeft\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(TitleHolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, title), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"\\uC218\\uC0C1 \\uC791\\uD488 \\uBAA9\\uB85D\")), React.createElement(\"img\", {\n    src: prizeRight,\n    alter: \"prizeRight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })), React.createElement(PrizedListHolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, prized.map(prizedItem => {\n    return React.createElement(PrizedItem, {\n      prizedItem: prizedItem,\n      key: prizedItem._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    });\n  }))));\n};\n\nexport default PrizedList;","map":{"version":3,"sources":["C:\\repusjh_Git\\cmanager-public\\frontend\\src\\components\\post\\PrizedList.js"],"names":["React","palette","Link","styled","Responsive","prizeLeft","prizeRight","PrizedListHolder","PrizedItemHolder","TitleHolder","div","gray","TitleImgHolder","WholeContentsHoler","PrizedItem","prizedItem","_id","title","team","PrizedList","prized","post","map"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AAEA,MAAMC,gBAAgB,GAAGJ,MAAM,CAACC,UAAD,CAAT,mBAAtB;AAMA,MAAMI,gBAAgB,GAAGL,MAAM,CAACD,IAAD,CAAT,oBAAtB,C,CAgBA;;AACA,MAAMO,WAAW,GAAGN,MAAM,CAACO,GAAV,qBAUNT,OAAO,CAACU,IAAR,CAAa,CAAb,CAVM,CAAjB;AAuCA,MAAMC,cAAc,GAAGT,MAAM,CAACO,GAAV,oBAApB;AAeA,MAAMG,kBAAkB,GAAGV,MAAM,CAACO,GAAV,oBAAxB,C,CAEA;;AACA,MAAMI,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAAA,QAC7BC,GAD6B,GACRD,UADQ,CAC7BC,GAD6B;AAAA,QACxBC,KADwB,GACRF,UADQ,CACxBE,KADwB;AAAA,QACjBC,IADiB,GACRH,UADQ,CACjBG,IADiB;AAErC,SACE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,qBAAcF,GAAd,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,KAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,IAAL,CAFF,CADF;AAMD,CARD,C,CAUA;AACA;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAsB;AAAA,QAC/BJ,KAD+B,GACrBI,IADqB,CAC/BJ,KAD+B;AAEvC,SACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEZ,SAAV;AAAqB,IAAA,KAAK,EAAC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKY,KAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAFF,CAFF,EAME;AAAK,IAAA,GAAG,EAAEX,UAAV;AAAsB,IAAA,KAAK,EAAC,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,EASE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGc,MAAM,CAACE,GAAP,CAAWP,UAAU,IAAI;AACxB,WAAO,oBAAC,UAAD;AAAY,MAAA,UAAU,EAAEA,UAAxB;AAAoC,MAAA,GAAG,EAAEA,UAAU,CAACC,GAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CADH,CADF,CATF,CADF;AAmBD,CArBD;;AAuBA,eAAeG,UAAf","sourcesContent":["//수상 작품 목록이 등록되어 있을 경우, 그 목록을 보여주는 컴포넌트.\r\n\r\nimport React from 'react';\r\nimport palette from '../../lib/styles/palette';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../common/Responsive';\r\nimport prizeLeft from '../../images/prizeLeft.png';\r\nimport prizeRight from '../../images/prizeRight.png';\r\n\r\nconst PrizedListHolder = styled(Responsive)`\r\n  margin-top: 3rem;\r\n  display: inline;\r\n  align-content: center;\r\n`;\r\n\r\nconst PrizedItemHolder = styled(Link)`\r\n  width: 100%;\r\n  float: right;\r\n  padding: 1rem;\r\n  border-radius: 5px;\r\n  margin-bottom: 0.5rem;\r\n  word-break: break-all;\r\n  background: white;\r\n  color: black;\r\n  box-shadow: -1px 1px 3px 0px rgba(0, 0, 0, 0.5);\r\n  p {\r\n    margin-top: 2rem;\r\n    margin-bottom: 2rem;\r\n  }\r\n`;\r\n\r\n//대회 제목 & '수상 작품 목록' 글자 홀더\r\nconst TitleHolder = styled.div`\r\n  @font-face {\r\n    font-family: 'MapoGoldenPier';\r\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2001@1.1/MapoGoldenPierA.woff')\r\n      format('woff');\r\n    font-weight: normal;\r\n    font-style: normal;\r\n  }\r\n\r\n  text-align: center;\r\n  color: ${palette.gray[8]};\r\n  padding-top: 1rem;\r\n\r\n  h1 {\r\n    font-size: 3rem;\r\n    margin: 0;\r\n    font-family: 'MapoGoldenPier';\r\n    font-weight: 500;\r\n    @media (max-width: 1152px) {\r\n      font-size: 2rem;\r\n    }\r\n    @media (max-width: 768px) {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n  h2 {\r\n    font-size: 6rem;\r\n    margin: 0;\r\n    font-family: 'MapoGoldenPier';\r\n    font-weight: 500;\r\n    @media (max-width: 1152px) {\r\n      font-size: 4rem;\r\n    }\r\n    @media (max-width: 768px) {\r\n      font-size: 2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TitleImgHolder = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  margin: 3rem 0;\r\n  img {\r\n    height: 15rem;\r\n    @media (max-width: 1152px) {\r\n      height: 8rem;\r\n    }\r\n    @media (max-width: 768px) {\r\n      height: 5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst WholeContentsHoler = styled.div``;\r\n\r\n//prizedItem는 post 객체 내의 배열 prized의 각각의 element를 나타냄.\r\nconst PrizedItem = ({ prizedItem }) => {\r\n  const { _id, title, team } = prizedItem;\r\n  return (\r\n    <PrizedItemHolder to={`/content/${_id}`}>\r\n      <h1>{title}</h1>\r\n      <h2>{team}</h2>\r\n    </PrizedItemHolder>\r\n  );\r\n};\r\n\r\n//prized는 post 객체 내의 배열 prized. prizedItem 객체의 배열임.\r\n//수정: 해당 대회에 속한 작품들의 리스트인 'contentList' 에서, 우선순위가 정해진 작품들만 로드\r\n\r\nconst PrizedList = ({ prized, post }) => {\r\n  const { title } = post;\r\n  return (\r\n    <WholeContentsHoler>\r\n      <TitleImgHolder>\r\n        <img src={prizeLeft} alter=\"prizeLeft\" />\r\n        <TitleHolder>\r\n          <h1>{title}</h1>\r\n          <h2>수상 작품 목록</h2>\r\n        </TitleHolder>\r\n        <img src={prizeRight} alter=\"prizeRight\" />\r\n      </TitleImgHolder>\r\n      <PrizedListHolder>\r\n        <div>\r\n          {prized.map(prizedItem => {\r\n            return <PrizedItem prizedItem={prizedItem} key={prizedItem._id} />;\r\n          })}\r\n        </div>\r\n      </PrizedListHolder>\r\n    </WholeContentsHoler>\r\n  );\r\n};\r\n\r\nexport default PrizedList;\r\n"]},"metadata":{},"sourceType":"module"}