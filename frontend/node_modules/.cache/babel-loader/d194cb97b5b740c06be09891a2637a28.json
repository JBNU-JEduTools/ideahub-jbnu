{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\src\\\\components\\\\administer\\\\Admin.js\";\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n  margin: 0.2rem;\\n  font-size: 1rem;\\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  margin-bottom: 1rem;\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  background: white;\\n  border-radius: 5px;\\n  padding: 0.1rem 1rem;\\n  margin: 0.5rem;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  background: \", \";\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport Responsive from '../common/Responsive';\nimport ErrorNotifier from '../common/ErrorNotifier';\nconst Wrapper = styled.div(_templateObject(), palette.gray[1]);\nconst UserListHolder = styled(Responsive)(_templateObject2());\nconst UserItemHolder = styled.div(_templateObject3());\nconst ButtonHoler = styled.div(_templateObject4());\nconst ChangeRoleButton = styled.button(_templateObject5()); //유저 하나의 정보를 보여주는 컴포넌트.\n\nconst UserItem = ({\n  userItem,\n  userRoleUpdateButtons\n}) => {\n  const _id = userItem._id,\n        username = userItem.username,\n        role = userItem.role;\n  return React.createElement(UserItemHolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"_id: \", _id), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"username: \", username), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"role: \", role), React.createElement(ButtonHoler, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, userRoleUpdateButtons));\n}; //여러 유저들의 정보를 리스트로 보여주는 컴포넌트.\n\n\nconst Admin = ({\n  users,\n  loading,\n  error,\n  user\n}) => {\n  if (!user || user.role !== 'admin') {\n    const errorTitle = 'Permission Denied';\n    const errorMessage = '관리자만 접근할 수 있는 페이지 입니다';\n    return React.createElement(ErrorNotifier, {\n      errorTitle: errorTitle,\n      errorMessage: errorMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    });\n  }\n\n  if (error) {\n    const errorTitle = 'An error found';\n    const errorMessage = '에러가 발생했습니다.';\n    return React.createElement(ErrorNotifier, {\n      errorTitle: errorTitle,\n      errorMessage: errorMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    });\n  } //유저 목록을 받아서, 그 개수만큼 UserItem 컴포넌트를 보여줌\n\n\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(UserListHolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, !loading && users && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, users.map(userItem => React.createElement(UserItem, {\n    userItem: userItem,\n    key: userItem._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })))));\n};\n\nexport default Admin;","map":{"version":3,"sources":["C:/repusjh_Git/cmanager-public/frontend/src/components/administer/Admin.js"],"names":["React","styled","palette","Responsive","ErrorNotifier","Wrapper","div","gray","UserListHolder","UserItemHolder","ButtonHoler","ChangeRoleButton","button","UserItem","userItem","userRoleUpdateButtons","_id","username","role","Admin","users","loading","error","user","errorTitle","errorMessage","map"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AAEA,MAAMC,OAAO,GAAGJ,MAAM,CAACK,GAAV,oBACGJ,OAAO,CAACK,IAAR,CAAa,CAAb,CADH,CAAb;AAIA,MAAMC,cAAc,GAAGP,MAAM,CAACE,UAAD,CAAT,oBAApB;AAEA,MAAMM,cAAc,GAAGR,MAAM,CAACK,GAAV,oBAApB;AAOA,MAAMI,WAAW,GAAGT,MAAM,CAACK,GAAV,oBAAjB;AAKA,MAAMK,gBAAgB,GAAGV,MAAM,CAACW,MAAV,oBAAtB,C,CAKA;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAyC;AAAA,QAChDC,GADgD,GACxBF,QADwB,CAChDE,GADgD;AAAA,QAC3CC,QAD2C,GACxBH,QADwB,CAC3CG,QAD2C;AAAA,QACjCC,IADiC,GACxBJ,QADwB,CACjCI,IADiC;AAExD,SACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAUF,GAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAeC,QAAf,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWC,IAAX,CAHF,EAIE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcH,qBAAd,CAJF,CADF;AAQD,CAVD,C,CAYA;;;AACA,MAAMI,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA,KAAlB;AAAyBC,EAAAA;AAAzB,CAAD,KAAqC;AACjD,MAAI,CAACA,IAAD,IAASA,IAAI,CAACL,IAAL,KAAc,OAA3B,EAAoC;AAClC,UAAMM,UAAU,GAAG,mBAAnB;AACA,UAAMC,YAAY,GAAG,uBAArB;AACA,WACE,oBAAC,aAAD;AAAe,MAAA,UAAU,EAAED,UAA3B;AAAuC,MAAA,YAAY,EAAEC,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AACD,MAAIH,KAAJ,EAAW;AACT,UAAME,UAAU,GAAG,gBAAnB;AACA,UAAMC,YAAY,GAAG,aAArB;AACA,WACE,oBAAC,aAAD;AAAe,MAAA,UAAU,EAAED,UAA3B;AAAuC,MAAA,YAAY,EAAEC,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAdgD,CAgBjD;;;AACA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACJ,OAAD,IAAYD,KAAZ,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACM,GAAN,CAAUZ,QAAQ,IACjB,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEA,QAApB;AAA8B,IAAA,GAAG,EAAEA,QAAQ,CAACE,GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFJ,CADF,CADF;AAaD,CA9BD;;AAgCA,eAAeG,KAAf","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport Responsive from '../common/Responsive';\r\nimport ErrorNotifier from '../common/ErrorNotifier';\r\n\r\nconst Wrapper = styled.div`\r\n  background: ${palette.gray[1]};\r\n`;\r\n\r\nconst UserListHolder = styled(Responsive)``;\r\n\r\nconst UserItemHolder = styled.div`\r\n  background: white;\r\n  border-radius: 5px;\r\n  padding: 0.1rem 1rem;\r\n  margin: 0.5rem;\r\n`;\r\n\r\nconst ButtonHoler = styled.div`\r\n  display: flex;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst ChangeRoleButton = styled.button`\r\n  margin: 0.2rem;\r\n  font-size: 1rem;\r\n`;\r\n\r\n//유저 하나의 정보를 보여주는 컴포넌트.\r\nconst UserItem = ({ userItem, userRoleUpdateButtons }) => {\r\n  const { _id, username, role } = userItem;\r\n  return (\r\n    <UserItemHolder>\r\n      <h2>_id: {_id}</h2>\r\n      <h2>username: {username}</h2>\r\n      <h2>role: {role}</h2>\r\n      <ButtonHoler>{userRoleUpdateButtons}</ButtonHoler>\r\n    </UserItemHolder>\r\n  );\r\n};\r\n\r\n//여러 유저들의 정보를 리스트로 보여주는 컴포넌트.\r\nconst Admin = ({ users, loading, error, user }) => {\r\n  if (!user || user.role !== 'admin') {\r\n    const errorTitle = 'Permission Denied';\r\n    const errorMessage = '관리자만 접근할 수 있는 페이지 입니다';\r\n    return (\r\n      <ErrorNotifier errorTitle={errorTitle} errorMessage={errorMessage} />\r\n    );\r\n  }\r\n  if (error) {\r\n    const errorTitle = 'An error found';\r\n    const errorMessage = '에러가 발생했습니다.';\r\n    return (\r\n      <ErrorNotifier errorTitle={errorTitle} errorMessage={errorMessage} />\r\n    );\r\n  }\r\n\r\n  //유저 목록을 받아서, 그 개수만큼 UserItem 컴포넌트를 보여줌\r\n  return (\r\n    <Wrapper>\r\n      <UserListHolder>\r\n        {!loading && users && (\r\n          <div>\r\n            {users.map(userItem => (\r\n              <UserItem userItem={userItem} key={userItem._id} />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </UserListHolder>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n"]},"metadata":{},"sourceType":"module"}