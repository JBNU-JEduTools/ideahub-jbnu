{"ast":null,"code":"import _slicedToArray from \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\src\\\\components\\\\post\\\\PrizedUpdater.js\";\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 4rem;\\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  margin: 1rem 0;\\n  padding-bottom: 1rem;\\n  border-bottom: 1px solid \", \";\\n  text-align: right;\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  text-align: center;\\n  border: none;\\n  border-radius: 5px;\\n  width: 10rem;\\n  height: 2.5rem;\\n  color: white;\\n  font-size: 1rem;\\n  background: \", \";\\n  &:hover {\\n    background: \", \";\\n  }\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  margin-top: 3rem;\\n  padding: 2rem;\\n  text-align: center;\\n  background: \", \";\\n  border-radius: 5px;\\n  border-color: \", \";\\n  h1 {\\n    font-weight: 100;\\n  }\\n  p {\\n    margin-bottom: 2rem;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\n//등록된 수상 작품이 없다고 알려주는 컴포넌트\n//+ 수상 작품 등록 modal을 발생 시키는 버튼을 포함하고 있으므로, 수상 작품 등록 역할도 수행. 하위 컴포넌트인 PrizeModal의 부모\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport PrizeModal from './PrizeModal';\nimport PrizedList from './PrizedList';\nimport ErrorNotifier from '../common/ErrorNotifier';\nimport Responsive from '../common/Responsive';\nconst AlerterHolder = styled.div(_templateObject(), palette.gray[1], palette.mainColor);\nconst ResponsiveHolder = styled(Responsive)(_templateObject2()); //수상 작품 등록 버튼\n\nconst UpdateButton = styled.button(_templateObject3(), palette.mainColor, palette.mainColorHovered); //수상 작품 리스트가 존재할 때 등록 버튼을 감싸는 div.\n\nconst ListExistButtonHolder = styled.div(_templateObject4(), palette.gray[3]); //스크롤 일관성을 위해 빈 공간 삽입\n\nconst EmptySpace = styled.div(_templateObject5()); //parameter onModal: 실질적인 등록 작업 수행. 아직 미구현\n\nconst PrizedUpdater = ({\n  contents,\n  onChangePriority,\n  isPrizeEmpty,\n  prized,\n  post,\n  user,\n  error,\n  loading\n}) => {\n  //PrizeModal을 보여줄지 여부를 저장.\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        modal = _useState2[0],\n        setModal = _useState2[1]; //수상작 등록 클릭 시\n\n\n  const onModalClick = () => {\n    setModal(true);\n  }; //현재 로그인한 유저가 관리자 또는 작성자일 경우에 true.\n\n\n  const isOwnPost = () => {\n    let ownPostResult = user && post && (user.role === 'admin' || user._id === post.user._id);\n    console.log('ownPostResult: ', ownPostResult);\n    return ownPostResult;\n  };\n\n  if (error) {\n    return React.createElement(ErrorNotifier, {\n      errorTitle: \"ERROR!\",\n      errorMessage: \"\\uC624\\uB958\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4. \\uB2E4\\uC2DC \\uC2DC\\uB3C4\\uD574\\uC8FC\\uC138\\uC694\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(EmptySpace, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), !loading && (isPrizeEmpty ? React.createElement(ResponsiveHolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(AlerterHolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"\\uC544\\uC9C1 \\uB4F1\\uB85D\\uB41C \\uC218\\uC0C1 \\uC791\\uD488\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"\\uAC1C\\uCD5C\\uC790\\uAC00 \\uC544\\uC9C1 \\uC218\\uC0C1 \\uC791\\uD488\\uC744 \\uB4F1\\uB85D\\uD558\\uC9C0 \\uC54A\\uC558\\uC2B5\\uB2C8\\uB2E4.\"), isOwnPost() ? React.createElement(UpdateButton, {\n    onClick: onModalClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"\\uC218\\uC0C1 \\uC791\\uD488 \\uB4F1\\uB85D\") : null), React.createElement(EmptySpace, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(EmptySpace, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(EmptySpace, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, isOwnPost() ? React.createElement(ListExistButtonHolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(UpdateButton, {\n    onClick: onModalClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"\\uC218\\uC0C1 \\uBAA9\\uB85D \\uC218\\uC815\")) : null, React.createElement(PrizedList, {\n    prized: prized,\n    post: post,\n    loading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(EmptySpace, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(EmptySpace, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }))), React.createElement(PrizeModal, {\n    contents: contents,\n    visible: modal,\n    onChangePriority: onChangePriority,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }));\n};\n\nexport default PrizedUpdater;","map":{"version":3,"sources":["C:\\repusjh_Git\\cmanager-public\\frontend\\src\\components\\post\\PrizedUpdater.js"],"names":["React","useState","useCallback","styled","palette","PrizeModal","PrizedList","ErrorNotifier","Responsive","AlerterHolder","div","gray","mainColor","ResponsiveHolder","UpdateButton","button","mainColorHovered","ListExistButtonHolder","EmptySpace","PrizedUpdater","contents","onChangePriority","isPrizeEmpty","prized","post","user","error","loading","modal","setModal","onModalClick","isOwnPost","ownPostResult","role","_id","console","log"],"mappings":"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","sourcesContent":["//등록된 수상 작품이 없다고 알려주는 컴포넌트\r\n//+ 수상 작품 등록 modal을 발생 시키는 버튼을 포함하고 있으므로, 수상 작품 등록 역할도 수행. 하위 컴포넌트인 PrizeModal의 부모\r\n\r\nimport React, { useState, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport PrizeModal from './PrizeModal';\r\nimport PrizedList from './PrizedList';\r\nimport ErrorNotifier from '../common/ErrorNotifier';\r\nimport Responsive from '../common/Responsive';\r\n\r\nconst AlerterHolder = styled.div`\r\n  width: 100%;\r\n  margin-top: 3rem;\r\n  padding: 2rem;\r\n  text-align: center;\r\n  background: ${palette.gray[1]};\r\n  border-radius: 5px;\r\n  border-color: ${palette.mainColor};\r\n  h1 {\r\n    font-weight: 100;\r\n  }\r\n  p {\r\n    margin-bottom: 2rem;\r\n  }\r\n`;\r\n\r\nconst ResponsiveHolder = styled(Responsive)``;\r\n\r\n//수상 작품 등록 버튼\r\nconst UpdateButton = styled.button`\r\n  text-align: center;\r\n  border: none;\r\n  border-radius: 5px;\r\n  width: 10rem;\r\n  height: 2.5rem;\r\n  color: white;\r\n  font-size: 1rem;\r\n  background: ${palette.mainColor};\r\n  &:hover {\r\n    background: ${palette.mainColorHovered};\r\n  }\r\n`;\r\n\r\n//수상 작품 리스트가 존재할 때 등록 버튼을 감싸는 div.\r\nconst ListExistButtonHolder = styled.div`\r\n  margin: 1rem 0;\r\n  padding-bottom: 1rem;\r\n  border-bottom: 1px solid ${palette.gray[3]};\r\n  text-align: right;\r\n`;\r\n\r\n//스크롤 일관성을 위해 빈 공간 삽입\r\nconst EmptySpace = styled.div`\r\n  width: 100%;\r\n  height: 4rem;\r\n`;\r\n\r\n//parameter onModal: 실질적인 등록 작업 수행. 아직 미구현\r\nconst PrizedUpdater = ({\r\n  contents,\r\n  onChangePriority,\r\n  isPrizeEmpty,\r\n  prized,\r\n  post,\r\n  user,\r\n  error,\r\n  loading,\r\n}) => {\r\n  //PrizeModal을 보여줄지 여부를 저장.\r\n  const [modal, setModal] = useState(false);\r\n  //수상작 등록 클릭 시\r\n  const onModalClick = () => {\r\n    setModal(true);\r\n  };\r\n\r\n  //현재 로그인한 유저가 관리자 또는 작성자일 경우에 true.\r\n  const isOwnPost = () => {\r\n    let ownPostResult =\r\n      user && post && (user.role === 'admin' || user._id === post.user._id);\r\n    console.log('ownPostResult: ', ownPostResult);\r\n    return ownPostResult;\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <ErrorNotifier\r\n        errorTitle=\"ERROR!\"\r\n        errorMessage=\"오류가 발생했습니다. 다시 시도해주세요\"\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <EmptySpace />\r\n      {!loading &&\r\n        (isPrizeEmpty ? (\r\n          <ResponsiveHolder>\r\n            {/* 수상 작품 목록이 등록되어있지 않은 경우 */}\r\n            <AlerterHolder>\r\n              <h1>아직 등록된 수상 작품이 없습니다.</h1>\r\n              <p>개최자가 아직 수상 작품을 등록하지 않았습니다.</p>\r\n              {isOwnPost() ? (\r\n                <UpdateButton onClick={onModalClick}>\r\n                  수상 작품 등록\r\n                </UpdateButton>\r\n              ) : null}\r\n            </AlerterHolder>\r\n            <EmptySpace />\r\n            <EmptySpace />\r\n            <EmptySpace />\r\n          </ResponsiveHolder>\r\n        ) : (\r\n          <div>\r\n            {/* 수상 작품 목록이 존재하는 경우 */}\r\n            {isOwnPost() ? (\r\n              <ListExistButtonHolder>\r\n                <UpdateButton onClick={onModalClick}>\r\n                  수상 목록 수정\r\n                </UpdateButton>\r\n              </ListExistButtonHolder>\r\n            ) : null}\r\n            <PrizedList prized={prized} post={post} loading={loading} />\r\n            <EmptySpace />\r\n            <EmptySpace />\r\n          </div>\r\n        ))}\r\n      <PrizeModal\r\n        contents={contents}\r\n        visible={modal}\r\n        onChangePriority={onChangePriority}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrizedUpdater;\r\n"]},"metadata":{},"sourceType":"module"}