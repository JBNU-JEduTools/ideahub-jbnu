{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kirin\\\\Desktop\\\\cmanager\\\\frontend\\\\src\\\\containers\\\\write\\\\EditorContainer.js\";\nimport React, { useEffect, useCallback } from 'react';\nimport Editor from '../../components/write/Editor';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeField, initialize } from '../../modules/write';\n\nconst EditorContainer = () => {\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(({\n    write\n  }) => ({\n    title: write.title,\n    category: write.category,\n    status: write.status,\n    date: write.date,\n    place: write.place,\n    description: write.description\n  })),\n        title = _useSelector.title,\n        category = _useSelector.category,\n        status = _useSelector.status,\n        date = _useSelector.date,\n        place = _useSelector.place,\n        description = _useSelector.description;\n\n  const onChangeField = useCallback(payload => dispatch(changeField(payload)), [dispatch]); //unmount시 write와 관련된 상태를 초기화 하는데 사용\n\n  useEffect(() => {\n    return () => {\n      dispatch(initialize());\n    };\n  }, [dispatch]);\n  return React.createElement(Editor, {\n    onChangeField: onChangeField,\n    title: title,\n    category: category,\n    status: status,\n    date: date,\n    place: place,\n    description: description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  });\n};\n\nexport default EditorContainer;","map":{"version":3,"sources":["C:\\Users\\kirin\\Desktop\\cmanager\\frontend\\src\\containers\\write\\EditorContainer.js"],"names":["React","useEffect","useCallback","Editor","useSelector","useDispatch","changeField","initialize","EditorContainer","dispatch","write","title","category","status","date","place","description","onChangeField","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,qBAAxC;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC5B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AAD4B,uBAEkCD,WAAW,CACvE,CAAC;AAAEM,IAAAA;AAAF,GAAD,MAAgB;AACdC,IAAAA,KAAK,EAAED,KAAK,CAACC,KADC;AAEdC,IAAAA,QAAQ,EAAEF,KAAK,CAACE,QAFF;AAGdC,IAAAA,MAAM,EAAEH,KAAK,CAACG,MAHA;AAIdC,IAAAA,IAAI,EAAEJ,KAAK,CAACI,IAJE;AAKdC,IAAAA,KAAK,EAAEL,KAAK,CAACK,KALC;AAMdC,IAAAA,WAAW,EAAEN,KAAK,CAACM;AANL,GAAhB,CADuE,CAF7C;AAAA,QAEpBL,KAFoB,gBAEpBA,KAFoB;AAAA,QAEbC,QAFa,gBAEbA,QAFa;AAAA,QAEHC,MAFG,gBAEHA,MAFG;AAAA,QAEKC,IAFL,gBAEKA,IAFL;AAAA,QAEWC,KAFX,gBAEWA,KAFX;AAAA,QAEkBC,WAFlB,gBAEkBA,WAFlB;;AAY5B,QAAMC,aAAa,GAAGf,WAAW,CAACgB,OAAO,IAAIT,QAAQ,CAACH,WAAW,CAACY,OAAD,CAAZ,CAApB,EAA4C,CAC3ET,QAD2E,CAA5C,CAAjC,CAZ4B,CAe5B;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACXQ,MAAAA,QAAQ,CAACF,UAAU,EAAX,CAAR;AACD,KAFD;AAGD,GAJQ,EAIN,CAACE,QAAD,CAJM,CAAT;AAKA,SACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAEQ,aADjB;AAEE,IAAA,KAAK,EAAEN,KAFT;AAGE,IAAA,QAAQ,EAAEC,QAHZ;AAIE,IAAA,MAAM,EAAEC,MAJV;AAKE,IAAA,IAAI,EAAEC,IALR;AAME,IAAA,KAAK,EAAEC,KANT;AAOE,IAAA,WAAW,EAAEC,WAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAWD,CAhCD;;AAkCA,eAAeR,eAAf","sourcesContent":["import React, { useEffect, useCallback } from 'react';\r\nimport Editor from '../../components/write/Editor';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeField, initialize } from '../../modules/write';\r\n\r\nconst EditorContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const { title, category, status, date, place, description } = useSelector(\r\n    ({ write }) => ({\r\n      title: write.title,\r\n      category: write.category,\r\n      status: write.status,\r\n      date: write.date,\r\n      place: write.place,\r\n      description: write.description,\r\n    }),\r\n  );\r\n  const onChangeField = useCallback(payload => dispatch(changeField(payload)), [\r\n    dispatch,\r\n  ]);\r\n  //unmount시 write와 관련된 상태를 초기화 하는데 사용\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(initialize());\r\n    };\r\n  }, [dispatch]);\r\n  return (\r\n    <Editor\r\n      onChangeField={onChangeField}\r\n      title={title}\r\n      category={category}\r\n      status={status}\r\n      date={date}\r\n      place={place}\r\n      description={description}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EditorContainer;\r\n"]},"metadata":{},"sourceType":"module"}