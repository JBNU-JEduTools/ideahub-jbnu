{"ast":null,"code":"import _slicedToArray from \"/Users/qwerasdf_ho/Desktop/ideaHub/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/qwerasdf_ho/Desktop/ideaHub/frontend/src/containers/auth/FindPWForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeField, initializeForm, login } from '../../modules/auth';\nimport AuthFormF from '../../components/auth/AuthFormF';\nimport { withRouter } from 'react-router-dom';\nimport { check } from '../../modules/user';\n\nconst FindPWFrom = ({\n  history\n}) => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        error = _useState2[0],\n        setError = _useState2[1];\n\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(({\n    auth,\n    user\n  }) => ({\n    form: auth.login,\n    auth: auth.auth,\n    authError: auth.authError,\n    user: user.user\n  })),\n        form = _useSelector.form,\n        auth = _useSelector.auth,\n        authError = _useSelector.authError,\n        user = _useSelector.user;\n\n  const onChange = e => {\n    const _e$target = e.target,\n          value = _e$target.value,\n          name = _e$target.name;\n    dispatch(changeField({\n      form: 'findpw',\n      key: name,\n      value\n    }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const username = form.username,\n          email = form.email;\n\n    if ([username, email].includes('')) {\n      setError('모든 정보를 입력해주세요');\n      return;\n    }\n\n    dispatch(login({\n      username,\n      email\n    }));\n  };\n\n  useEffect(() => {\n    dispatch(initializeForm('findpw'));\n  }, [dispatch]);\n  useEffect(() => {\n    if (authError) {\n      console.log('오류 발생');\n      console.log(authError);\n      setError('존재하지 않는 학번입니다.');\n      return;\n    }\n\n    if (auth) {\n      console.log('로그인 성공');\n      dispatch(check());\n    }\n  }, [auth, authError, dispatch]);\n  useEffect(() => {\n    if (user) {\n      history.push('/');\n\n      try {\n        localStorage.setItem('user', JSON.stringify(user));\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }, [history, user]);\n  return React.createElement(AuthFormF, {\n    type: \"findpw\",\n    form: form,\n    onChange: onChange,\n    onSubmit: onSubmit,\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(FindPWFrom);","map":{"version":3,"sources":["/Users/qwerasdf_ho/Desktop/ideaHub/frontend/src/containers/auth/FindPWForm.js"],"names":["React","useEffect","useState","useDispatch","useSelector","changeField","initializeForm","login","AuthFormF","withRouter","check","FindPWFrom","history","error","setError","dispatch","auth","user","form","authError","onChange","e","target","value","name","key","onSubmit","preventDefault","username","email","includes","console","log","push","localStorage","setItem","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeField, initializeForm, login } from '../../modules/auth';\nimport AuthFormF from '../../components/auth/AuthFormF';\nimport { withRouter } from 'react-router-dom';\nimport { check } from '../../modules/user';\n\nconst FindPWFrom = ({ history }) => {\n  const [error, setError] = useState(null);\n  const dispatch = useDispatch();\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\n    form: auth.login,\n    auth: auth.auth,\n    authError: auth.authError,\n    user: user.user,\n  }));\n\n  const onChange = e => {\n    const { value, name } = e.target;\n    dispatch(\n      changeField({\n        form: 'findpw',\n        key: name,\n        value,\n      }),\n    );\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const { username, email } = form;\n    if([username, email].includes('')) {\n      setError('모든 정보를 입력해주세요');\n      return;\n    }\n    dispatch(login({ username, email }));\n  };\n\n  useEffect(() => {\n    dispatch(initializeForm('findpw'));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (authError) {\n      console.log('오류 발생');\n      console.log(authError);\n      setError('존재하지 않는 학번입니다.');\n      return;\n    }\n    if (auth) {\n      console.log('로그인 성공');\n      dispatch(check());\n    }\n  }, [auth, authError, dispatch]);\n\n  useEffect(() => {\n    if (user) {\n      history.push('/');\n      try {\n        localStorage.setItem('user', JSON.stringify(user));\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }, [history, user]);\n\n  return (\n    <AuthFormF\n      type=\"findpw\"\n      form={form}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      error={error}\n    />\n  );\n};\n\nexport default withRouter(FindPWFrom);\n"]},"metadata":{},"sourceType":"module"}