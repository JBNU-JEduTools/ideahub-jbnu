{"ast":null,"code":"var _jsxFileName = \"/Users/qwerasdf_ho/Desktop/ideaHub/frontend/src/containers/auth/FindPWForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeField, initializeForm, login } from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { withRouter } from 'react-router-dom';\nimport { check } from '../../modules/user';\n\nconst FindPWForm = ({\n  history\n}) => {\n  const onChange = e => {\n    const _e$target = e.target,\n          value = _e$target.value,\n          name = _e$target.name;\n    dispatch(changeField({\n      form: 'login',\n      key: name,\n      value\n    }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const _form = form,\n          username = _form.username,\n          password = _form.password;\n    dispatch(login({\n      username,\n      password\n    }));\n  };\n\n  useEffect(() => {\n    dispatch(initializeForm('login'));\n  }, [dispatch]);\n  useEffect(() => {\n    if (authError) {\n      console.log('오류 발생');\n      console.log(authError);\n      setError('존재하지 않는 아이디거나 비밀번호가 틀렸습니다.');\n      return;\n    }\n\n    if (auth) {\n      console.log('로그인 성공');\n      dispatch(check());\n    }\n  }, [auth, authError, dispatch]);\n  useEffect(() => {\n    if (user) {\n      history.push('/');\n\n      try {\n        localStorage.setItem('user', JSON.stringify(user));\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }, [history, user]);\n  return React.createElement(AuthForm, {\n    type: \"login\",\n    form: form,\n    onChange: onChange,\n    onSubmit: onSubmit,\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(FindPWForm);","map":{"version":3,"sources":["/Users/qwerasdf_ho/Desktop/ideaHub/frontend/src/containers/auth/FindPWForm.js"],"names":["React","useEffect","useState","useDispatch","useSelector","changeField","initializeForm","login","AuthForm","withRouter","check","FindPWForm","history","onChange","e","target","value","name","dispatch","form","key","onSubmit","preventDefault","username","password","authError","console","log","setError","auth","user","push","localStorage","setItem","JSON","stringify","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,KAAtC,QAAmD,oBAAnD;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,KAAT,QAAsB,oBAAtB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAGlC,QAAMC,QAAQ,GAAGC,CAAC,IAAI;AAAA,sBACIA,CAAC,CAACC,MADN;AAAA,UACZC,KADY,aACZA,KADY;AAAA,UACLC,IADK,aACLA,IADK;AAEpBC,IAAAA,QAAQ,CACNb,WAAW,CAAC;AACVc,MAAAA,IAAI,EAAE,OADI;AAEVC,MAAAA,GAAG,EAAEH,IAFK;AAGVD,MAAAA;AAHU,KAAD,CADL,CAAR;AAOD,GATD;;AAWA,QAAMK,QAAQ,GAAGP,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACQ,cAAF;AADoB,kBAEWH,IAFX;AAAA,UAEZI,QAFY,SAEZA,QAFY;AAAA,UAEFC,QAFE,SAEFA,QAFE;AAGpBN,IAAAA,QAAQ,CAACX,KAAK,CAAC;AAAEgB,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAD,CAAN,CAAR;AACD,GAJD;;AAMAvB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,QAAQ,CAACZ,cAAc,CAAC,OAAD,CAAf,CAAR;AACD,GAFQ,EAEN,CAACY,QAAD,CAFM,CAAT;AAIAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIwB,SAAJ,EAAe;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACAG,MAAAA,QAAQ,CAAC,4BAAD,CAAR;AACA;AACD;;AACD,QAAIC,IAAJ,EAAU;AACRH,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAT,MAAAA,QAAQ,CAACR,KAAK,EAAN,CAAR;AACD;AACF,GAXQ,EAWN,CAACmB,IAAD,EAAOJ,SAAP,EAAkBP,QAAlB,CAXM,CAAT;AAaAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI6B,IAAJ,EAAU;AACRlB,MAAAA,OAAO,CAACmB,IAAR,CAAa,GAAb;;AACA,UAAI;AACFC,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAA7B;AACD,OAFD,CAEE,OAAOhB,CAAP,EAAU;AACVY,QAAAA,OAAO,CAACC,GAAR,CAAYb,CAAZ;AACD;AACF;AACF,GATQ,EASN,CAACF,OAAD,EAAUkB,IAAV,CATM,CAAT;AAWA,SACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAEX,IAFR;AAGE,IAAA,QAAQ,EAAEN,QAHZ;AAIE,IAAA,QAAQ,EAAEQ,QAJZ;AAKE,IAAA,KAAK,EAAEe,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASD,CAzDD;;AA2DA,eAAe3B,UAAU,CAACE,UAAD,CAAzB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeField, initializeForm, login } from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { withRouter } from 'react-router-dom';\nimport { check } from '../../modules/user';\n\nconst FindPWForm = ({ history }) => {\n  \n\n  const onChange = e => {\n    const { value, name } = e.target;\n    dispatch(\n      changeField({\n        form: 'login',\n        key: name,\n        value,\n      }),\n    );\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const { username, password } = form;\n    dispatch(login({ username, password }));\n  };\n\n  useEffect(() => {\n    dispatch(initializeForm('login'));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (authError) {\n      console.log('오류 발생');\n      console.log(authError);\n      setError('존재하지 않는 아이디거나 비밀번호가 틀렸습니다.');\n      return;\n    }\n    if (auth) {\n      console.log('로그인 성공');\n      dispatch(check());\n    }\n  }, [auth, authError, dispatch]);\n\n  useEffect(() => {\n    if (user) {\n      history.push('/');\n      try {\n        localStorage.setItem('user', JSON.stringify(user));\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }, [history, user]);\n\n  return (\n    <AuthForm\n      type=\"login\"\n      form={form}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      error={error}\n    />\n  );\n};\n\nexport default withRouter(FindPWForm);\n"]},"metadata":{},"sourceType":"module"}