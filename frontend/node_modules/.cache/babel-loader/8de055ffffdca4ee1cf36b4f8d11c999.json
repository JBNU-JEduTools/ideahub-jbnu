{"ast":null,"code":"import _defineProperty from \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nimport * as postsAPI from '../lib/api/posts';\nimport { takeLatest } from 'redux-saga/effects';\n\nconst _createRequestActionT = createRequestActionTypes('posts/LIST_POSTS'),\n      _createRequestActionT2 = _slicedToArray(_createRequestActionT, 3),\n      LIST_POSTS = _createRequestActionT2[0],\n      LIST_POSTS_SUCCESS = _createRequestActionT2[1],\n      LIST_POSTS_FAILURE = _createRequestActionT2[2];\n\nconst _createRequestActionT3 = createRequestActionTypes('posts/LIST_RECOMMENDED_POSTS'),\n      _createRequestActionT4 = _slicedToArray(_createRequestActionT3, 3),\n      LIST_RECOMMENDED_POSTS = _createRequestActionT4[0],\n      LIST_RECOMMENDED_POSTS_SUCCESS = _createRequestActionT4[1],\n      LIST_RECOMMENDED_POSTS_FAILURE = _createRequestActionT4[2];\n\nexport const listPosts = createAction(LIST_POSTS, ({\n  tag,\n  username,\n  page\n}) => ({\n  tag,\n  username,\n  page\n}));\nexport const listRecommendedPosts = createAction(LIST_RECOMMENDED_POSTS);\nconst listPostsSaga = createRequestSaga(LIST_POSTS, postsAPI.listPosts);\nconst listRecommendedPostsSaga = createRequestSaga(LIST_RECOMMENDED_POSTS, postsAPI.listRecommendedPosts);\nexport function* postsSaga() {\n  yield takeLatest(LIST_POSTS, listPostsSaga);\n}\nconst initialState = {\n  posts: null,\n  error: null,\n  lastPage: 1\n};\nconst posts = handleActions({\n  [LIST_POSTS_SUCCESS]: (state, {\n    payload: posts,\n    meta: response\n  }) => _objectSpread({}, state, {\n    posts,\n    lastPage: parseInt(response.headers['last-page'], 5)\n  }),\n  [LIST_POSTS_FAILURE]: (state, {\n    payload: error\n  }) => _objectSpread({}, state, {\n    error\n  })\n}, initialState);\nexport default posts;","map":{"version":3,"sources":["C:\\repusjh_Git\\cmanager-public\\frontend\\src\\modules\\posts.js"],"names":["createAction","handleActions","createRequestSaga","createRequestActionTypes","postsAPI","takeLatest","LIST_POSTS","LIST_POSTS_SUCCESS","LIST_POSTS_FAILURE","LIST_RECOMMENDED_POSTS","LIST_RECOMMENDED_POSTS_SUCCESS","LIST_RECOMMENDED_POSTS_FAILURE","listPosts","tag","username","page","listRecommendedPosts","listPostsSaga","listRecommendedPostsSaga","postsSaga","initialState","posts","error","lastPage","state","payload","meta","response","parseInt","headers"],"mappings":";;;;;;;AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,OAAOC,iBAAP,IACEC,wBADF,QAEO,0BAFP;AAGA,OAAO,KAAKC,QAAZ,MAA0B,kBAA1B;AACA,SAASC,UAAT,QAA2B,oBAA3B;;8BAMIF,wBAAwB,CAAC,kBAAD,C;;MAH1BG,U;MACAC,kB;MACAC,kB;;+BAMEL,wBAAwB,CAAC,8BAAD,C;;MAH1BM,sB;MACAC,8B;MACAC,8B;;AAGF,OAAO,MAAMC,SAAS,GAAGZ,YAAY,CACnCM,UADmC,EAEnC,CAAC;AAAEO,EAAAA,GAAF;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA;AAAjB,CAAD,MAA8B;AAC5BF,EAAAA,GAD4B;AAE5BC,EAAAA,QAF4B;AAG5BC,EAAAA;AAH4B,CAA9B,CAFmC,CAA9B;AAQP,OAAO,MAAMC,oBAAoB,GAAGhB,YAAY,CAACS,sBAAD,CAAzC;AAEP,MAAMQ,aAAa,GAAGf,iBAAiB,CAACI,UAAD,EAAaF,QAAQ,CAACQ,SAAtB,CAAvC;AACA,MAAMM,wBAAwB,GAAGhB,iBAAiB,CAChDO,sBADgD,EAEhDL,QAAQ,CAACY,oBAFuC,CAAlD;AAKA,OAAO,UAAUG,SAAV,GAAsB;AAC3B,QAAMd,UAAU,CAACC,UAAD,EAAaW,aAAb,CAAhB;AACD;AAED,MAAMG,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,QAAQ,EAAE;AAHS,CAArB;AAMA,MAAMF,KAAK,GAAGpB,aAAa,CACzB;AACE,GAACM,kBAAD,GAAsB,CAACiB,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEJ,KAAX;AAAkBK,IAAAA,IAAI,EAAEC;AAAxB,GAAR,uBACjBH,KADiB;AAEpBH,IAAAA,KAFoB;AAGpBE,IAAAA,QAAQ,EAAEK,QAAQ,CAACD,QAAQ,CAACE,OAAT,CAAiB,WAAjB,CAAD,EAAgC,CAAhC;AAHE,IADxB;AAME,GAACrB,kBAAD,GAAsB,CAACgB,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEH;AAAX,GAAR,uBACjBE,KADiB;AAEpBF,IAAAA;AAFoB;AANxB,CADyB,EAYzBF,YAZyB,CAA3B;AAeA,eAAeC,KAAf","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from '../lib/createRequestSaga';\r\nimport * as postsAPI from '../lib/api/posts';\r\nimport { takeLatest } from 'redux-saga/effects';\r\n\r\nconst [\r\n  LIST_POSTS,\r\n  LIST_POSTS_SUCCESS,\r\n  LIST_POSTS_FAILURE,\r\n] = createRequestActionTypes('posts/LIST_POSTS');\r\nconst [\r\n  LIST_RECOMMENDED_POSTS,\r\n  LIST_RECOMMENDED_POSTS_SUCCESS,\r\n  LIST_RECOMMENDED_POSTS_FAILURE,\r\n] = createRequestActionTypes('posts/LIST_RECOMMENDED_POSTS');\r\n\r\nexport const listPosts = createAction(\r\n  LIST_POSTS,\r\n  ({ tag, username, page }) => ({\r\n    tag,\r\n    username,\r\n    page,\r\n  }),\r\n);\r\nexport const listRecommendedPosts = createAction(LIST_RECOMMENDED_POSTS);\r\n\r\nconst listPostsSaga = createRequestSaga(LIST_POSTS, postsAPI.listPosts);\r\nconst listRecommendedPostsSaga = createRequestSaga(\r\n  LIST_RECOMMENDED_POSTS,\r\n  postsAPI.listRecommendedPosts,\r\n);\r\n\r\nexport function* postsSaga() {\r\n  yield takeLatest(LIST_POSTS, listPostsSaga);\r\n}\r\n\r\nconst initialState = {\r\n  posts: null,\r\n  error: null,\r\n  lastPage: 1,\r\n};\r\n\r\nconst posts = handleActions(\r\n  {\r\n    [LIST_POSTS_SUCCESS]: (state, { payload: posts, meta: response }) => ({\r\n      ...state,\r\n      posts,\r\n      lastPage: parseInt(response.headers['last-page'], 5),\r\n    }),\r\n    [LIST_POSTS_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default posts;\r\n"]},"metadata":{},"sourceType":"module"}