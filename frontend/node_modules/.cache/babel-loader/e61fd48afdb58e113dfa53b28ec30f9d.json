{"ast":null,"code":"var _jsxFileName = \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\src\\\\containers\\\\post\\\\NoPrizedAlerterContainer.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport NoPrizedAlerter from '../../components/post/NoPrizedAlerter';\nimport { listContentItem } from '../../modules/post'; //react-router-dom을 사용해 라우트로 설정한 컴포넌트는 3가지의 props를 전달받음.\n//match: 어떤 라우트에 매칭되었는지에 대한 정보.\n//history: push, replace를 통해 다른 경로로 이동하거나 앞 뒤 페이지로 전환 가능.\n\nconst NoPrizedAlerterContainer = ({\n  match,\n  history,\n  location\n}) => {\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(({\n    post,\n    contentsList,\n    loading\n  }) => ({\n    post: post.post,\n    listError: post.listError,\n    loading: loading['post/LIST_CONTENT_ITEM'],\n    contentsList: post.contentsList\n  })),\n        post = _useSelector.post,\n        contentsList = _useSelector.contentsList,\n        listError = _useSelector.listError,\n        loading = _useSelector.loading;\n\n  useEffect(() => {\n    console.log(post);\n    console.log(contentsList);\n    dispatch(listContentItem());\n  }, [dispatch]); //수상 작품 등록 및 저장.\n\n  const onPrizeSave = () => {//☆★☆★☆★☆★☆★수정 필요!!!☆★☆★☆★☆★☆★\n  };\n\n  return React.createElement(NoPrizedAlerter, {\n    contents: contentsList,\n    onPrizeSave: onPrizeSave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(NoPrizedAlerterContainer);","map":{"version":3,"sources":["C:/repusjh_Git/cmanager-public/frontend/src/containers/post/NoPrizedAlerterContainer.js"],"names":["React","useEffect","useDispatch","useSelector","withRouter","NoPrizedAlerter","listContentItem","NoPrizedAlerterContainer","match","history","location","dispatch","post","contentsList","loading","listError","console","log","onPrizeSave"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,SAASC,eAAT,QAAgC,oBAAhC,C,CAEA;AACA;AACA;;AACA,MAAMC,wBAAwB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA;AAAlB,CAAD,KAAkC;AACjE,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AADiE,uBAGdC,WAAW,CAC5D,CAAC;AAAES,IAAAA,IAAF;AAAQC,IAAAA,YAAR;AAAsBC,IAAAA;AAAtB,GAAD,MAAsC;AACpCF,IAAAA,IAAI,EAAEA,IAAI,CAACA,IADyB;AAEpCG,IAAAA,SAAS,EAAEH,IAAI,CAACG,SAFoB;AAGpCD,IAAAA,OAAO,EAAEA,OAAO,CAAC,wBAAD,CAHoB;AAIpCD,IAAAA,YAAY,EAAED,IAAI,CAACC;AAJiB,GAAtC,CAD4D,CAHG;AAAA,QAGzDD,IAHyD,gBAGzDA,IAHyD;AAAA,QAGnDC,YAHmD,gBAGnDA,YAHmD;AAAA,QAGrCE,SAHqC,gBAGrCA,SAHqC;AAAA,QAG1BD,OAH0B,gBAG1BA,OAH0B;;AAYjEb,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;AACAF,IAAAA,QAAQ,CAACL,eAAe,EAAhB,CAAR;AACD,GAJQ,EAIN,CAACK,QAAD,CAJM,CAAT,CAZiE,CAkBjE;;AACA,QAAMO,WAAW,GAAG,MAAM,CACxB;AACD,GAFD;;AAIA,SAAO,oBAAC,eAAD;AAAiB,IAAA,QAAQ,EAAEL,YAA3B;AAAyC,IAAA,WAAW,EAAEK,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAxBD;;AA0BA,eAAed,UAAU,CAACG,wBAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport NoPrizedAlerter from '../../components/post/NoPrizedAlerter';\r\nimport { listContentItem } from '../../modules/post';\r\n\r\n//react-router-dom을 사용해 라우트로 설정한 컴포넌트는 3가지의 props를 전달받음.\r\n//match: 어떤 라우트에 매칭되었는지에 대한 정보.\r\n//history: push, replace를 통해 다른 경로로 이동하거나 앞 뒤 페이지로 전환 가능.\r\nconst NoPrizedAlerterContainer = ({ match, history, location }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { post, contentsList, listError, loading } = useSelector(\r\n    ({ post, contentsList, loading }) => ({\r\n      post: post.post,\r\n      listError: post.listError,\r\n      loading: loading['post/LIST_CONTENT_ITEM'],\r\n      contentsList: post.contentsList,\r\n    }),\r\n  );\r\n\r\n  useEffect(() => {\r\n    console.log(post);\r\n    console.log(contentsList);\r\n    dispatch(listContentItem());\r\n  }, [dispatch]);\r\n\r\n  //수상 작품 등록 및 저장.\r\n  const onPrizeSave = () => {\r\n    //☆★☆★☆★☆★☆★수정 필요!!!☆★☆★☆★☆★☆★\r\n  };\r\n\r\n  return <NoPrizedAlerter contents={contentsList} onPrizeSave={onPrizeSave} />;\r\n};\r\n\r\nexport default withRouter(NoPrizedAlerterContainer);\r\n"]},"metadata":{},"sourceType":"module"}