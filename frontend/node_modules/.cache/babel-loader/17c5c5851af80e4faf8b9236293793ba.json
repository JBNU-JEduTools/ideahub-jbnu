{"ast":null,"code":"import _slicedToArray from \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\src\\\\components\\\\main\\\\MainSlideShow.js\";\n\nfunction _templateObject7() {\n  const data = _taggedTemplateLiteral([\"\\n  background: none;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  font-size: 2.5rem;\\n  color: \", \";\\n  .currentIndex {\\n    color: \", \";\\n  }\\n  .no {\\n    color: \", \";\\n  }\\n\"]);\n\n  _templateObject7 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  const data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  bottom: 1rem;\\n  left: 50%;\\n  transform: translate(-50%);\\n  display: flex;\\n  z-index: 1;\\n\"]);\n\n  _templateObject6 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n  color: \", \";\\n  border: none;\\n  outline: none;\\n  position: absolute;\\n  width: 10%;\\n  height: 30rem;\\n  background: none;\\n  right: 0;\\n  transition: 0.5s;\\n  font-size: 4rem;\\n  font-weight: 100;\\n  font-height: 30rem;\\n  &:hover {\\n    background: rgba(0, 0, 0, 0.356);\\n    cursor: pointer;\\n    color: white;\\n  }\\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  color: \", \";\\n  border: none;\\n  outline: none;\\n  position: absolute;\\n  width: 10%;\\n  height: 30rem;\\n  background: none;\\n  left: 0;\\n  transition: 0.5s;\\n  font-size: 4rem;\\n  font-weight: 100;\\n  &:hover {\\n    background: rgba(0, 0, 0, 0.356);\\n    cursor: pointer;\\n    color: white;\\n  }\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: auto;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  height: 100%;\\n  min-width: 100%;\\n  transition: 0.5s;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  height: 30rem;\\n  padding: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  margin-top: 2rem;\\n  overflow: hidden;\\n  @media (max-width: 768px) {\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport mainImg from '../../images/main3.png';\nimport TitleSlide from './TitleSlide';\nconst SliderHolder = styled.div(_templateObject());\nconst SlideItem = styled.div(_templateObject2());\nconst ImgHolder = styled.img(_templateObject3());\nconst SlideNavButtonLeft = styled.button(_templateObject4(), palette.gray[7]);\nconst SlideNavButtonRight = styled.button(_templateObject5(), palette.gray[7]);\nconst ButtonSliderHolder = styled.div(_templateObject6());\nconst ButtonSlider = styled.button(_templateObject7(), palette.gray[7], palette.mainColor, palette.mainColorHovered);\n\nconst MainSlideShow = () => {\n  let sliderArray = [React.createElement(TitleSlide, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(TitleSlide, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(TitleSlide, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })];\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        x = _useState2[0],\n        setX = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isAutoSlide = _useState4[0],\n        setIsAutoSlide = _useState4[1];\n\n  const goLeft = () => {\n    x === 0 ? setX(-100 * (sliderArray.length - 1)) : setX(x + 100);\n  };\n\n  const goRight = () => {\n    x === -100 * (sliderArray.length - 1) ? setX(0) : setX(x - 100);\n    console.log('goRight x: ', x);\n  }; //슬라이드 하단의 ButtonSlider를 클릭했을 때 실행되는 함수\n\n\n  const goClicked = clickedIndex => {\n    console.log(clickedIndex);\n    setX(clickedIndex * -100);\n    console.log('x:', x);\n  }; //슬라이드 자동 스크롤을 위한 즉시 실행 함수. 미완\n  // (() => {\n  //   if (!isAutoSlide) {\n  //     setIsAutoSlide(true);\n  //   }\n  // })();\n\n\n  const test = 1;\n  return React.createElement(SliderHolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(ButtonSliderHolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, sliderArray.map((item, index) => {\n    return React.createElement(ButtonSlider, {\n      className: test == 1 ? 'currentIndex' : 'no',\n      key: index,\n      onClick: () => goClicked(index),\n      style: {\n        color: -x / 100 == index ? palette.mainColor : palette.gray[7]\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"\\u25CF\");\n  })), sliderArray.map((item, index) => {\n    return React.createElement(SlideItem, {\n      key: index,\n      style: {\n        transform: \"translateX(\".concat(x, \"%)\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, item);\n  }), React.createElement(SlideNavButtonLeft, {\n    onClick: goLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"{\"), React.createElement(SlideNavButtonRight, {\n    onClick: goRight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"}\"));\n};\n\nexport default MainSlideShow;","map":{"version":3,"sources":["C:\\repusjh_Git\\cmanager-public\\frontend\\src\\components\\main\\MainSlideShow.js"],"names":["React","useState","useEffect","styled","palette","mainImg","TitleSlide","SliderHolder","div","SlideItem","ImgHolder","img","SlideNavButtonLeft","button","gray","SlideNavButtonRight","ButtonSliderHolder","ButtonSlider","mainColor","mainColorHovered","MainSlideShow","sliderArray","x","setX","isAutoSlide","setIsAutoSlide","goLeft","length","goRight","console","log","goClicked","clickedIndex","test","map","item","index","color","transform"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport mainImg from '../../images/main3.png';\r\n\r\nimport TitleSlide from './TitleSlide';\r\n\r\nconst SliderHolder = styled.div`\r\n  position: relative;\r\n  height: 30rem;\r\n  padding: 0;\r\n  display: flex;\r\n  box-sizing: border-box;\r\n  margin-top: 2rem;\r\n  overflow: hidden;\r\n  @media (max-width: 768px) {\r\n  }\r\n`;\r\n\r\nconst SlideItem = styled.div`\r\n  position: relative;\r\n  height: 100%;\r\n  min-width: 100%;\r\n  transition: 0.5s;\r\n`;\r\n\r\nconst ImgHolder = styled.img`\r\n  width: 100%;\r\n  height: auto;\r\n`;\r\n\r\nconst SlideNavButtonLeft = styled.button`\r\n  color: ${palette.gray[7]};\r\n  border: none;\r\n  outline: none;\r\n  position: absolute;\r\n  width: 10%;\r\n  height: 30rem;\r\n  background: none;\r\n  left: 0;\r\n  transition: 0.5s;\r\n  font-size: 4rem;\r\n  font-weight: 100;\r\n  &:hover {\r\n    background: rgba(0, 0, 0, 0.356);\r\n    cursor: pointer;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst SlideNavButtonRight = styled.button`\r\n  color: ${palette.gray[7]};\r\n  border: none;\r\n  outline: none;\r\n  position: absolute;\r\n  width: 10%;\r\n  height: 30rem;\r\n  background: none;\r\n  right: 0;\r\n  transition: 0.5s;\r\n  font-size: 4rem;\r\n  font-weight: 100;\r\n  font-height: 30rem;\r\n  &:hover {\r\n    background: rgba(0, 0, 0, 0.356);\r\n    cursor: pointer;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst ButtonSliderHolder = styled.div`\r\n  position: absolute;\r\n  bottom: 1rem;\r\n  left: 50%;\r\n  transform: translate(-50%);\r\n  display: flex;\r\n  z-index: 1;\r\n`;\r\n\r\nconst ButtonSlider = styled.button`\r\n  background: none;\r\n  border: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  font-size: 2.5rem;\r\n  color: ${palette.gray[7]};\r\n  .currentIndex {\r\n    color: ${palette.mainColor};\r\n  }\r\n  .no {\r\n    color: ${palette.mainColorHovered};\r\n  }\r\n`;\r\n\r\nconst MainSlideShow = () => {\r\n  let sliderArray = [<TitleSlide />, <TitleSlide />, <TitleSlide />];\r\n  const [x, setX] = useState(0);\r\n  const [isAutoSlide, setIsAutoSlide] = useState(false);\r\n  const goLeft = () => {\r\n    x === 0 ? setX(-100 * (sliderArray.length - 1)) : setX(x + 100);\r\n  };\r\n  const goRight = () => {\r\n    x === -100 * (sliderArray.length - 1) ? setX(0) : setX(x - 100);\r\n    console.log('goRight x: ', x);\r\n  };\r\n\r\n  //슬라이드 하단의 ButtonSlider를 클릭했을 때 실행되는 함수\r\n  const goClicked = (clickedIndex) => {\r\n    console.log(clickedIndex);\r\n    setX(clickedIndex * -100);\r\n    console.log('x:', x);\r\n  };\r\n\r\n  //슬라이드 자동 스크롤을 위한 즉시 실행 함수. 미완\r\n  // (() => {\r\n  //   if (!isAutoSlide) {\r\n  //     setIsAutoSlide(true);\r\n  //   }\r\n  // })();\r\n\r\n  const test = 1;\r\n\r\n  return (\r\n    <SliderHolder>\r\n      <ButtonSliderHolder>\r\n        {sliderArray.map((item, index) => {\r\n          return (\r\n            <ButtonSlider\r\n              className={test == 1 ? 'currentIndex' : 'no'}\r\n              key={index}\r\n              onClick={() => goClicked(index)}\r\n              style={{\r\n                color: -x / 100 == index ? palette.mainColor : palette.gray[7],\r\n              }}\r\n            >\r\n              ●\r\n            </ButtonSlider>\r\n          );\r\n        })}\r\n      </ButtonSliderHolder>\r\n      {sliderArray.map((item, index) => {\r\n        return (\r\n          <SlideItem key={index} style={{ transform: `translateX(${x}%)` }}>\r\n            {item}\r\n          </SlideItem>\r\n        );\r\n      })}\r\n      <SlideNavButtonLeft onClick={goLeft}>&#123;</SlideNavButtonLeft>\r\n      <SlideNavButtonRight onClick={goRight}>}</SlideNavButtonRight>\r\n    </SliderHolder>\r\n  );\r\n};\r\n\r\nexport default MainSlideShow;\r\n"]},"metadata":{},"sourceType":"module"}