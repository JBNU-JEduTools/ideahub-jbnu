{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/qwerasdf_ho/Desktop/ideaHub/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/qwerasdf_ho/Desktop/ideaHub/frontend/src/components/post/PostViewer.js\";\n\nfunction _templateObject6() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  margin-top: 4rem;\\n  margin-bottom: 10rem;\\n  @media (max-width: 1152px) {\\n    flex-direction: column;\\n  }\\n\"]);\n\n  _templateObject6 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n  font-size: 1.3125rem;\\n  color: \", \";\\n\\n  img {\\n    resizemode: contain;\\n    width: 820px;\\n\\n    @media (max-width: 852px) {\\n      width: 468px;\\n    }\\n    @media (max-width: 468px) {\\n      width: 100%;\\n    }\\n  }\\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  color: \", \";\\n  margin-bottom: 0.3rem;\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  border-bottom: 1px solid \", \";\\n  padding-bottom: 2rem;\\n  margin-bottom: 2rem;\\n  h1 {\\n    font-size: 2rem;\\n    margin: 0;\\n    font-weight: 500;\\n  }\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 852px;\\n\\n  @media (max-width: 1152px) {\\n    width: 100%;\\n  }\\n  @media (max-width: 468px) {\\n    width: 100%;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport Responsive from '../common/Responsive';\nimport PostInfoSide from './PostInfoSide';\nimport ErrorNotifier from '../common/ErrorNotifier';\nimport Disqus from 'disqus-react';\nimport SubMenuBar from './SubMenuBar';\nimport PrizedList from './PrizedList';\nimport PrizedUpdaterContainer from '../../containers/post/PrizedUpdaterContainer'; //대회 정보와 수상 작품 목록을 보여주기 위한 responsive 블록\n\nconst PostViewerBlock = styled(Responsive)(_templateObject());\nconst PrizeListBlock = styled.div(_templateObject2());\nconst PostHead = styled.div(_templateObject3(), palette.gray[2]);\nconst SubContents = styled.div(_templateObject4(), palette.gray[7]);\nconst PostContent = styled.div(_templateObject5(), palette.gray[8]);\nconst ContentsHolder = styled(Responsive)(_templateObject6());\n\nconst PostViewer = ({\n  post,\n  user,\n  error,\n  loading,\n  actionButtons,\n  onWrite,\n  contentsList,\n  toContentList\n}) => {\n  if (error) {\n    if (error.response && error.response.status === 404) {\n      return React.createElement(ErrorNotifier, {\n        errorTitle: \"404 Not Found\",\n        errorMessage: \"\\uC774\\uB7F0! \\uD398\\uC774\\uC9C0\\uB97C \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(ErrorNotifier, {\n      errorTitle: \"Cannot find page\",\n      errorMessage: \"\\uC774\\uB7F0! \\uD398\\uC774\\uC9C0\\uB97C \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    });\n  }\n\n  if (loading || !post) {\n    return null;\n  } //contentsList는 현재 대회에 등록된 작품 목록.\n  //이 목록에서, prizedPlace (수상 순위)가 숫자로 등록되어있는 경우에만 수상 작품 페이지에 보이도록.\n\n\n  let prized = null;\n\n  if (contentsList) {\n    prized = contentsList.filter(contentItem => !isNaN(contentItem.prizedPlace));\n  } //contentsList는 현재 대회에 등록된 작품 목록.\n\n\n  const _id = post._id,\n        title = post.title,\n        category = post.category,\n        status = post.status,\n        date = post.date,\n        place = post.place,\n        description = post.description;\n\n  const isOwnPost = () => {\n    const ownPostResult = user && post && (user._id === post.user._id || user.role == 'admin');\n    console.log('ownPostResult: ', ownPostResult);\n    return ownPostResult;\n  };\n\n  const disqusShortname = 'ideahub-test'; //found in your Disqus.com dashboard\n  //현재 URL\n\n  const currentURL = window.location.href; //currentURL 을 '/'을 기준으로 나눈 배열.\n\n  const splitedURL = currentURL.split('/'); //현재 URL의 마지막에 'prized'가 붙어있으면 true, 아니면 false\n\n  const isPrizePage = splitedURL[splitedURL.length - 1] === 'prized'; //현재 대회에 수상 작품 목록이 등록되어있지 않으면 true\n\n  const isPrizeEmpty = !prized || prized.length === 0;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(SubMenuBar, {\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), //현재 URL의 끝에 prized가 붙어있으면 수상 목록 페이지를 보여주고, 아니면 대회 정보 페이지 보여주기\n  isPrizePage ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(PrizeListBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(PrizedUpdaterContainer, {\n    isPrizeEmpty: isPrizeEmpty,\n    prized: prized,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(ContentsHolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(PostViewerBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(PostHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(SubContents, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"\\uCE74\\uD14C\\uACE0\\uB9AC #\", category), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, title)), isOwnPost() ? actionButtons : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), React.createElement(PostContent, {\n    dangerouslySetInnerHTML: {\n      __html: description\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  })), React.createElement(PostInfoSide, {\n    title: title,\n    category: category,\n    status: status,\n    date: date,\n    place: place,\n    user: user,\n    onWrite: onWrite,\n    _id: _id,\n    toContentList: toContentList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }))));\n};\n\nexport default PostViewer;","map":{"version":3,"sources":["/Users/qwerasdf_ho/Desktop/ideaHub/frontend/src/components/post/PostViewer.js"],"names":["React","styled","palette","Responsive","PostInfoSide","ErrorNotifier","Disqus","SubMenuBar","PrizedList","PrizedUpdaterContainer","PostViewerBlock","PrizeListBlock","div","PostHead","gray","SubContents","PostContent","ContentsHolder","PostViewer","post","user","error","loading","actionButtons","onWrite","contentsList","toContentList","response","status","prized","filter","contentItem","isNaN","prizedPlace","_id","title","category","date","place","description","isOwnPost","ownPostResult","role","console","log","disqusShortname","currentURL","window","location","href","splitedURL","split","isPrizePage","length","isPrizeEmpty","__html"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport Responsive from '../common/Responsive';\nimport PostInfoSide from './PostInfoSide';\nimport ErrorNotifier from '../common/ErrorNotifier';\nimport Disqus from 'disqus-react';\nimport SubMenuBar from './SubMenuBar';\nimport PrizedList from './PrizedList';\nimport PrizedUpdaterContainer from '../../containers/post/PrizedUpdaterContainer';\n\n//대회 정보와 수상 작품 목록을 보여주기 위한 responsive 블록\nconst PostViewerBlock = styled(Responsive)`\n  width: 852px;\n\n  @media (max-width: 1152px) {\n    width: 100%;\n  }\n  @media (max-width: 468px) {\n    width: 100%;\n  }\n`;\n\nconst PrizeListBlock = styled.div``;\n\nconst PostHead = styled.div`\n  border-bottom: 1px solid ${palette.gray[2]};\n  padding-bottom: 2rem;\n  margin-bottom: 2rem;\n  h1 {\n    font-size: 2rem;\n    margin: 0;\n    font-weight: 500;\n  }\n`;\n\nconst SubContents = styled.div`\n  color: ${palette.gray[7]};\n  margin-bottom: 0.3rem;\n`;\n\nconst PostContent = styled.div`\n  font-size: 1.3125rem;\n  color: ${palette.gray[8]};\n\n  img {\n    resizemode: contain;\n    width: 820px;\n\n    @media (max-width: 852px) {\n      width: 468px;\n    }\n    @media (max-width: 468px) {\n      width: 100%;\n    }\n  }\n`;\n\nconst ContentsHolder = styled(Responsive)`\n  display: flex;\n  margin-top: 4rem;\n  margin-bottom: 10rem;\n  @media (max-width: 1152px) {\n    flex-direction: column;\n  }\n`;\n\nconst PostViewer = ({\n  post,\n  user,\n  error,\n  loading,\n  actionButtons,\n  onWrite,\n  contentsList,\n  toContentList,\n}) => {\n  if (error) {\n    if (error.response && error.response.status === 404) {\n      return (\n        <ErrorNotifier\n          errorTitle=\"404 Not Found\"\n          errorMessage=\"이런! 페이지를 찾을 수 없습니다.\"\n        />\n      );\n    }\n    return (\n      <ErrorNotifier\n        errorTitle=\"Cannot find page\"\n        errorMessage=\"이런! 페이지를 찾을 수 없습니다.\"\n      />\n    );\n  }\n\n  if (loading || !post) {\n    return null;\n  }\n\n  //contentsList는 현재 대회에 등록된 작품 목록.\n  //이 목록에서, prizedPlace (수상 순위)가 숫자로 등록되어있는 경우에만 수상 작품 페이지에 보이도록.\n  let prized = null;\n  if (contentsList) {\n    prized = contentsList.filter(\n      (contentItem) => !isNaN(contentItem.prizedPlace),\n    );\n  }\n\n  //contentsList는 현재 대회에 등록된 작품 목록.\n  const { _id, title, category, status, date, place, description } = post;\n\n  const isOwnPost = () => {\n    const ownPostResult =\n      user && post && (user._id === post.user._id || user.role == 'admin');\n    console.log('ownPostResult: ', ownPostResult);\n    return ownPostResult;\n  };\n\n  const disqusShortname = 'ideahub-test'; //found in your Disqus.com dashboard\n\n  //현재 URL\n  const currentURL = window.location.href;\n  //currentURL 을 '/'을 기준으로 나눈 배열.\n  const splitedURL = currentURL.split('/');\n  //현재 URL의 마지막에 'prized'가 붙어있으면 true, 아니면 false\n  const isPrizePage = splitedURL[splitedURL.length - 1] === 'prized';\n  //현재 대회에 수상 작품 목록이 등록되어있지 않으면 true\n  const isPrizeEmpty = !prized || prized.length === 0;\n\n  return (\n    <div>\n      <SubMenuBar post={post} />\n      {\n        //현재 URL의 끝에 prized가 붙어있으면 수상 목록 페이지를 보여주고, 아니면 대회 정보 페이지 보여주기\n        isPrizePage ? (\n          <div>\n            <PrizeListBlock>\n              <PrizedUpdaterContainer\n                isPrizeEmpty={isPrizeEmpty}\n                prized={prized}\n              />\n            </PrizeListBlock>\n          </div>\n        ) : (\n          <div>\n            <ContentsHolder>\n              <PostViewerBlock>\n                <PostHead>\n                  <SubContents>카테고리 #{category}</SubContents>\n                  <h1>{title}</h1>\n                </PostHead>\n                {isOwnPost() ? actionButtons : <div />}\n                <PostContent\n                  dangerouslySetInnerHTML={{\n                    __html: description,\n                  }}\n                />\n                \n              </PostViewerBlock>\n              <PostInfoSide\n                title={title}\n                category={category}\n                status={status}\n                date={date}\n                place={place}\n                user={user}\n                onWrite={onWrite}\n                _id={_id}\n                toContentList={toContentList}\n              />\n            </ContentsHolder>\n          </div>\n        )\n      }\n    </div>\n  );\n};\n\nexport default PostViewer;\n"]},"metadata":{},"sourceType":"module"}