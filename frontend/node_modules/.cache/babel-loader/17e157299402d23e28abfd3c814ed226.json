{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\repusjh_Git\\\\cmanager-public\\\\frontend\\\\src\\\\components\\\\post\\\\PostViewer.js\";\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  margin-top: 4rem;\\n  margin-bottom: 10rem;\\n  @media (max-width: 1152px) {\\n    flex-direction: column;\\n  }\\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  font-size: 1.3125rem;\\n  color: \", \";\\n\\n  img {\\n    resizemode: contain;\\n    width: 820px;\\n\\n    @media (max-width: 852px) {\\n      width: 468px;\\n    }\\n    @media (max-width: 468px) {\\n      width: 100%;\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  color: \", \";\\n  margin-bottom: 0.3rem;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  border-bottom: 1px solid \", \";\\n  padding-bottom: 2rem;\\n  margin-bottom: 2rem;\\n  h1 {\\n    font-size: 2rem;\\n    margin: 0;\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 852px;\\n\\n  @media (max-width: 1152px) {\\n    width: 100%;\\n  }\\n  @media (max-width: 468px) {\\n    width: 100%;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport Responsive from '../common/Responsive';\nimport PostInfoSide from './PostInfoSide';\nimport ErrorNotifier from '../common/ErrorNotifier';\nimport Disqus from 'disqus-react';\nimport SubMenuBar from './SubMenuBar';\nconst PostViewerBlock = styled(Responsive)(_templateObject());\nconst PostHead = styled.div(_templateObject2(), palette.gray[2]);\nconst SubContents = styled.div(_templateObject3(), palette.gray[7]);\nconst PostContent = styled.div(_templateObject4(), palette.gray[8]);\nconst ContentsHolder = styled(Responsive)(_templateObject5());\n\nconst PostViewer = ({\n  post,\n  user,\n  error,\n  loading,\n  actionButtons\n}) => {\n  if (error) {\n    if (error.response && error.response.status === 404) {\n      return React.createElement(ErrorNotifier, {\n        errorTitle: \"404 Not Found\",\n        errorMessage: \"\\uC774\\uB7F0! \\uAC15\\uC544\\uC9C0\\uAC00 \\uD398\\uC774\\uC9C0\\uB97C \\uBB3C\\uACE0 \\uB3C4\\uB9DD\\uAC14\\uB098\\uBD10\\uC694\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(ErrorNotifier, {\n      errorTitle: \"Cannot find page\",\n      errorMessage: \"\\uC774\\uB7F0! \\uAC15\\uC544\\uC9C0\\uAC00 \\uD398\\uC774\\uC9C0\\uB97C \\uBB3C\\uACE0 \\uB3C4\\uB9DD\\uAC14\\uB098\\uBD10\\uC694\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    });\n  }\n\n  if (loading || !post) {\n    return null;\n  }\n\n  const title = post.title,\n        category = post.category,\n        status = post.status,\n        date = post.date,\n        place = post.place,\n        description = post.description;\n\n  const isOwnPost = () => {\n    let ownPostResult = user && post && user._id === post.user._id;\n    console.log('ownPostResult: ', ownPostResult);\n    return ownPostResult;\n  };\n\n  const disqusShortname = 'ideahub-test'; //found in your Disqus.com dashboard\n\n  const currentURL = window.location.href;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(SubMenuBar, {\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(ContentsHolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(PostViewerBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(PostHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(SubContents, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"\\uCE74\\uD14C\\uACE0\\uB9AC #\", category), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, title)), isOwnPost() ? actionButtons : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(PostContent, {\n    dangerouslySetInnerHTML: {\n      __html: description\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(Disqus.DiscussionEmbed, {\n    shortname: disqusShortname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })), React.createElement(PostInfoSide, {\n    title: title,\n    category: category,\n    status: status,\n    date: date,\n    place: place,\n    user: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }))));\n};\n\nexport default PostViewer;","map":{"version":3,"sources":["C:/repusjh_Git/cmanager-public/frontend/src/components/post/PostViewer.js"],"names":["React","styled","palette","Responsive","PostInfoSide","ErrorNotifier","Disqus","SubMenuBar","PostViewerBlock","PostHead","div","gray","SubContents","PostContent","ContentsHolder","PostViewer","post","user","error","loading","actionButtons","response","status","title","category","date","place","description","isOwnPost","ownPostResult","_id","console","log","disqusShortname","currentURL","window","location","href","__html"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport Responsive from '../common/Responsive';\r\nimport PostInfoSide from './PostInfoSide';\r\nimport ErrorNotifier from '../common/ErrorNotifier';\r\nimport Disqus from 'disqus-react';\r\nimport SubMenuBar from './SubMenuBar';\r\n\r\nconst PostViewerBlock = styled(Responsive)`\r\n  width: 852px;\r\n\r\n  @media (max-width: 1152px) {\r\n    width: 100%;\r\n  }\r\n  @media (max-width: 468px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst PostHead = styled.div`\r\n  border-bottom: 1px solid ${palette.gray[2]};\r\n  padding-bottom: 2rem;\r\n  margin-bottom: 2rem;\r\n  h1 {\r\n    font-size: 2rem;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst SubContents = styled.div`\r\n  color: ${palette.gray[7]};\r\n  margin-bottom: 0.3rem;\r\n`;\r\n\r\nconst PostContent = styled.div`\r\n  font-size: 1.3125rem;\r\n  color: ${palette.gray[8]};\r\n\r\n  img {\r\n    resizemode: contain;\r\n    width: 820px;\r\n\r\n    @media (max-width: 852px) {\r\n      width: 468px;\r\n    }\r\n    @media (max-width: 468px) {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ContentsHolder = styled(Responsive)`\r\n  display: flex;\r\n  margin-top: 4rem;\r\n  margin-bottom: 10rem;\r\n  @media (max-width: 1152px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst PostViewer = ({ post, user, error, loading, actionButtons }) => {\r\n  if (error) {\r\n    if (error.response && error.response.status === 404) {\r\n      return (\r\n        <ErrorNotifier\r\n          errorTitle=\"404 Not Found\"\r\n          errorMessage=\"이런! 강아지가 페이지를 물고 도망갔나봐요\"\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <ErrorNotifier\r\n        errorTitle=\"Cannot find page\"\r\n        errorMessage=\"이런! 강아지가 페이지를 물고 도망갔나봐요\"\r\n      />\r\n    );\r\n  }\r\n\r\n  if (loading || !post) {\r\n    return null;\r\n  }\r\n\r\n  const { title, category, status, date, place, description } = post;\r\n\r\n  const isOwnPost = () => {\r\n    let ownPostResult = user && post && user._id === post.user._id;\r\n    console.log('ownPostResult: ', ownPostResult);\r\n    return ownPostResult;\r\n  };\r\n\r\n  const disqusShortname = 'ideahub-test'; //found in your Disqus.com dashboard\r\n\r\n  const currentURL = window.location.href;\r\n\r\n  return (\r\n    <div>\r\n      <SubMenuBar post={post} />\r\n      <div></div>\r\n      <div>\r\n        <ContentsHolder>\r\n          <PostViewerBlock>\r\n            <PostHead>\r\n              <SubContents>카테고리 #{category}</SubContents>\r\n              <h1>{title}</h1>\r\n            </PostHead>\r\n            {isOwnPost() ? actionButtons : <div />}\r\n            <PostContent\r\n              dangerouslySetInnerHTML={{\r\n                __html: description,\r\n              }}\r\n            />\r\n            <Disqus.DiscussionEmbed shortname={disqusShortname} />\r\n          </PostViewerBlock>\r\n          <PostInfoSide\r\n            title={title}\r\n            category={category}\r\n            status={status}\r\n            date={date}\r\n            place={place}\r\n            user={user}\r\n          />\r\n        </ContentsHolder>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostViewer;\r\n"]},"metadata":{},"sourceType":"module"}