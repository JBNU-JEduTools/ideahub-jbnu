{"ast":null,"code":"import { call, put } from 'redux-saga/effects';\nimport { startLoading, finishLoading } from '../modules/loading';\nexport const createRequestActionTypes = type => {\n  const SUCCESS = \"\".concat(type, \"_SUCCESS\");\n  const FAILURE = \"\".concat(type, \"_FAILURE\");\n  return [type, SUCCESS, FAILURE];\n};\nexport default function createRequestSaga(type, request) {\n  const SUCCESS = \"\".concat(type, \"_SUCCESS\");\n  const FAILURE = \"\".concat(type, \"_FAILURE\");\n  return function* (action) {\n    yield put(startLoading(type));\n\n    try {\n      const response = yield call(request, action.payload);\n      yield put({\n        type: SUCCESS,\n        payload: response.data\n      });\n    } catch (e) {\n      yield put({\n        type: FAILURE,\n        payload: e,\n        error: true\n      });\n    }\n\n    yield put(finishLoading(type));\n  };\n}","map":{"version":3,"sources":["C:\\Users\\skyai\\Desktop\\cmanager\\frontend\\src\\lib\\createRequestSaga.js"],"names":["call","put","startLoading","finishLoading","createRequestActionTypes","type","SUCCESS","FAILURE","createRequestSaga","request","action","response","payload","data","e","error"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,oBAA5C;AAEA,OAAO,MAAMC,wBAAwB,GAAGC,IAAI,IAAI;AAC9C,QAAMC,OAAO,aAAMD,IAAN,aAAb;AACA,QAAME,OAAO,aAAMF,IAAN,aAAb;AACA,SAAO,CAACA,IAAD,EAAOC,OAAP,EAAgBC,OAAhB,CAAP;AACD,CAJM;AAMP,eAAe,SAASC,iBAAT,CAA2BH,IAA3B,EAAiCI,OAAjC,EAA0C;AACvD,QAAMH,OAAO,aAAMD,IAAN,aAAb;AACA,QAAME,OAAO,aAAMF,IAAN,aAAb;AAEA,SAAO,WAAUK,MAAV,EAAkB;AACvB,UAAMT,GAAG,CAACC,YAAY,CAACG,IAAD,CAAb,CAAT;;AACA,QAAI;AACF,YAAMM,QAAQ,GAAG,MAAMX,IAAI,CAACS,OAAD,EAAUC,MAAM,CAACE,OAAjB,CAA3B;AACA,YAAMX,GAAG,CAAC;AACRI,QAAAA,IAAI,EAAEC,OADE;AAERM,QAAAA,OAAO,EAAED,QAAQ,CAACE;AAFV,OAAD,CAAT;AAID,KAND,CAME,OAAOC,CAAP,EAAU;AACV,YAAMb,GAAG,CAAC;AACRI,QAAAA,IAAI,EAAEE,OADE;AAERK,QAAAA,OAAO,EAAEE,CAFD;AAGRC,QAAAA,KAAK,EAAE;AAHC,OAAD,CAAT;AAKD;;AACD,UAAMd,GAAG,CAACE,aAAa,CAACE,IAAD,CAAd,CAAT;AACD,GAhBD;AAiBD","sourcesContent":["import { call, put } from 'redux-saga/effects';\r\nimport { startLoading, finishLoading } from '../modules/loading';\r\n\r\nexport const createRequestActionTypes = type => {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const FAILURE = `${type}_FAILURE`;\r\n  return [type, SUCCESS, FAILURE];\r\n};\r\n\r\nexport default function createRequestSaga(type, request) {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const FAILURE = `${type}_FAILURE`;\r\n\r\n  return function*(action) {\r\n    yield put(startLoading(type));\r\n    try {\r\n      const response = yield call(request, action.payload);\r\n      yield put({\r\n        type: SUCCESS,\r\n        payload: response.data,\r\n      });\r\n    } catch (e) {\r\n      yield put({\r\n        type: FAILURE,\r\n        payload: e,\r\n        error: true,\r\n      });\r\n    }\r\n    yield put(finishLoading(type));\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}